// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "MMC_Bowling.h"
#include "MMC_Bowling.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1MMC_Bowling() {}
FName MMC_BOWLING_OnActivate = FName(TEXT("OnActivate"));
FName MMC_BOWLING_OnChangePosition = FName(TEXT("OnChangePosition"));
FName MMC_BOWLING_OnClosed = FName(TEXT("OnClosed"));
FName MMC_BOWLING_OnEndRaiseAndLower = FName(TEXT("OnEndRaiseAndLower"));
FName MMC_BOWLING_OnEndResetAndLower = FName(TEXT("OnEndResetAndLower"));
FName MMC_BOWLING_OnEnter = FName(TEXT("OnEnter"));
FName MMC_BOWLING_OnFail = FName(TEXT("OnFail"));
FName MMC_BOWLING_OnFocus = FName(TEXT("OnFocus"));
FName MMC_BOWLING_OnFullyClosed = FName(TEXT("OnFullyClosed"));
FName MMC_BOWLING_OnFullyOpened = FName(TEXT("OnFullyOpened"));
FName MMC_BOWLING_OnGameover = FName(TEXT("OnGameover"));
FName MMC_BOWLING_OnKilled = FName(TEXT("OnKilled"));
FName MMC_BOWLING_OnLaunch = FName(TEXT("OnLaunch"));
FName MMC_BOWLING_OnLook = FName(TEXT("OnLook"));
FName MMC_BOWLING_OnOpened = FName(TEXT("OnOpened"));
FName MMC_BOWLING_OnPass = FName(TEXT("OnPass"));
FName MMC_BOWLING_OnPressed = FName(TEXT("OnPressed"));
FName MMC_BOWLING_OnRaiseAndLower = FName(TEXT("OnRaiseAndLower"));
FName MMC_BOWLING_OnResetAndLower = FName(TEXT("OnResetAndLower"));
FName MMC_BOWLING_OnSpare = FName(TEXT("OnSpare"));
FName MMC_BOWLING_OnStrike = FName(TEXT("OnStrike"));
FName MMC_BOWLING_OnTextChanged = FName(TEXT("OnTextChanged"));
FName MMC_BOWLING_OnUse = FName(TEXT("OnUse"));
FName MMC_BOWLING_OnUseIgnored = FName(TEXT("OnUseIgnored"));
FName MMC_BOWLING_OnUseLocked = FName(TEXT("OnUseLocked"));
	void Autil_debug::StaticRegisterNativesAutil_debug()
	{
		FNativeFunctionRegistrar::RegisterFunction(Autil_debug::StaticClass(), "PrintBlurp",(Native)&Autil_debug::execPrintBlurp);
		FNativeFunctionRegistrar::RegisterFunction(Autil_debug::StaticClass(), "PrintFatal",(Native)&Autil_debug::execPrintFatal);
		FNativeFunctionRegistrar::RegisterFunction(Autil_debug::StaticClass(), "PrintMessage",(Native)&Autil_debug::execPrintMessage);
		FNativeFunctionRegistrar::RegisterFunction(Autil_debug::StaticClass(), "PrintWarning",(Native)&Autil_debug::execPrintWarning);
	}
	IMPLEMENT_CLASS(Autil_debug, 3573796949);
	void Ainfo_target::StaticRegisterNativesAinfo_target()
	{
		FNativeFunctionRegistrar::RegisterFunction(Ainfo_target::StaticClass(), "FindTargetByName",(Native)&Ainfo_target::execFindTargetByName);
		FNativeFunctionRegistrar::RegisterFunction(Ainfo_target::StaticClass(), "FindTargetNearestToLocation",(Native)&Ainfo_target::execFindTargetNearestToLocation);
		FNativeFunctionRegistrar::RegisterFunction(Ainfo_target::StaticClass(), "GetInfo",(Native)&Ainfo_target::execGetInfo);
		FNativeFunctionRegistrar::RegisterFunction(Ainfo_target::StaticClass(), "GetOffsetToActor",(Native)&Ainfo_target::execGetOffsetToActor);
		FNativeFunctionRegistrar::RegisterFunction(Ainfo_target::StaticClass(), "GetTargetAtOrigin",(Native)&Ainfo_target::execGetTargetAtOrigin);
		FNativeFunctionRegistrar::RegisterFunction(Ainfo_target::StaticClass(), "GetTransformToActor",(Native)&Ainfo_target::execGetTransformToActor);
	}
	IMPLEMENT_CLASS(Ainfo_target, 3487043369);
	void Aentity_base::OnKilled()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnKilled),NULL);
	}
	void Aentity_base::OnUse(AActor* caller)
	{
		entity_base_eventOnUse_Parms Parms;
		Parms.caller=caller;
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnUse),&Parms);
	}
	void Aentity_base::OnUseIgnored(AActor* caller)
	{
		entity_base_eventOnUseIgnored_Parms Parms;
		Parms.caller=caller;
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnUseIgnored),&Parms);
	}
	void Aentity_base::StaticRegisterNativesAentity_base()
	{
		FNativeFunctionRegistrar::RegisterFunction(Aentity_base::StaticClass(), "CalculateHealth",(Native)&Aentity_base::execCalculateHealth);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_base::StaticClass(), "FindActorByName",(Native)&Aentity_base::execFindActorByName);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_base::StaticClass(), "FindEntityByName",(Native)&Aentity_base::execFindEntityByName);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_base::StaticClass(), "GetOffsetToActor",(Native)&Aentity_base::execGetOffsetToActor);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_base::StaticClass(), "GetTransformToActor",(Native)&Aentity_base::execGetTransformToActor);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_base::StaticClass(), "ResetWorldTransform",(Native)&Aentity_base::execResetWorldTransform);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_base::StaticClass(), "TeleportToTarget",(Native)&Aentity_base::execTeleportToTarget);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_base::StaticClass(), "Use",(Native)&Aentity_base::execUse);
	}
	IMPLEMENT_CLASS(Aentity_base, 298725948);
	void Abowling_pin::OnEndRaiseAndLower()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnEndRaiseAndLower),NULL);
	}
	void Abowling_pin::OnEndResetAndLower()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnEndResetAndLower),NULL);
	}
	void Abowling_pin::OnRaiseAndLower()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnRaiseAndLower),NULL);
	}
	void Abowling_pin::OnResetAndLower()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnResetAndLower),NULL);
	}
	void Abowling_pin::StaticRegisterNativesAbowling_pin()
	{
		FNativeFunctionRegistrar::RegisterFunction(Abowling_pin::StaticClass(), "GetPinClosestToTarget",(Native)&Abowling_pin::execGetPinClosestToTarget);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_pin::StaticClass(), "RaiseAndLower",(Native)&Abowling_pin::execRaiseAndLower);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_pin::StaticClass(), "ResetAndLower",(Native)&Abowling_pin::execResetAndLower);
	}
	IMPLEMENT_CLASS(Abowling_pin, 4261216690);
static class UEnum* EndgameType_StaticEnum()
{
	extern MMC_BOWLING_API class UPackage* Z_Construct_UPackage__Script_MMC_Bowling();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern MMC_BOWLING_API class UEnum* Z_Construct_UEnum_MMC_Bowling_EndgameType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_MMC_Bowling_EndgameType, Z_Construct_UPackage__Script_MMC_Bowling(), TEXT("EndgameType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EndgameType(EndgameType_StaticEnum, TEXT("/Script/MMC_Bowling"), TEXT("EndgameType"), false, nullptr, nullptr);
static class UEnum* ScoreType_StaticEnum()
{
	extern MMC_BOWLING_API class UPackage* Z_Construct_UPackage__Script_MMC_Bowling();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern MMC_BOWLING_API class UEnum* Z_Construct_UEnum_MMC_Bowling_ScoreType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_MMC_Bowling_ScoreType, Z_Construct_UPackage__Script_MMC_Bowling(), TEXT("ScoreType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ScoreType(ScoreType_StaticEnum, TEXT("/Script/MMC_Bowling"), TEXT("ScoreType"), false, nullptr, nullptr);
	void Abowling_system::OnGameover()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnGameover),NULL);
	}
	void Abowling_system::OnSpare()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnSpare),NULL);
	}
	void Abowling_system::OnStrike(int32 count)
	{
		bowling_system_eventOnStrike_Parms Parms;
		Parms.count=count;
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnStrike),&Parms);
	}
	void Abowling_system::StaticRegisterNativesAbowling_system()
	{
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "appendNewScore",(Native)&Abowling_system::execappendNewScore);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "CalculateScore",(Native)&Abowling_system::execCalculateScore);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "formatScoreString",(Native)&Abowling_system::execformatScoreString);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "GameIsOver",(Native)&Abowling_system::execGameIsOver);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "GetAbsoluteScore",(Native)&Abowling_system::execGetAbsoluteScore);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "GetEndgameType",(Native)&Abowling_system::execGetEndgameType);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "GetFallenPinCount",(Native)&Abowling_system::execGetFallenPinCount);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "GetIntScoreOfFrame",(Native)&Abowling_system::execGetIntScoreOfFrame);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "GetNumberOfCurrentFrame",(Native)&Abowling_system::execGetNumberOfCurrentFrame);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "GetStringScoreOfFrame",(Native)&Abowling_system::execGetStringScoreOfFrame);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "GetStringScoreOfGame",(Native)&Abowling_system::execGetStringScoreOfGame);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "loadScoreTable",(Native)&Abowling_system::execloadScoreTable);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "RaiseAndLowerUnfallenPins",(Native)&Abowling_system::execRaiseAndLowerUnfallenPins);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "ResetAndLowerAllPins",(Native)&Abowling_system::execResetAndLowerAllPins);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "ResetGame",(Native)&Abowling_system::execResetGame);
		FNativeFunctionRegistrar::RegisterFunction(Abowling_system::StaticClass(), "WaitingForFirstThrow",(Native)&Abowling_system::execWaitingForFirstThrow);
	}
	IMPLEMENT_CLASS(Abowling_system, 3365979077);
	void Aentity_launcher::OnLaunch(FVector newVelocity)
	{
		entity_launcher_eventOnLaunch_Parms Parms;
		Parms.newVelocity=newVelocity;
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnLaunch),&Parms);
	}
	void Aentity_launcher::StaticRegisterNativesAentity_launcher()
	{
		FNativeFunctionRegistrar::RegisterFunction(Aentity_launcher::StaticClass(), "launchProjectile",(Native)&Aentity_launcher::execlaunchProjectile);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_launcher::StaticClass(), "launchProjectileAngular",(Native)&Aentity_launcher::execlaunchProjectileAngular);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_launcher::StaticClass(), "launchProjectileLinear",(Native)&Aentity_launcher::execlaunchProjectileLinear);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_launcher::StaticClass(), "setLaunchDirection",(Native)&Aentity_launcher::execsetLaunchDirection);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_launcher::StaticClass(), "setLaunchDirectionTarget",(Native)&Aentity_launcher::execsetLaunchDirectionTarget);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_launcher::StaticClass(), "setProjectile",(Native)&Aentity_launcher::execsetProjectile);
		FNativeFunctionRegistrar::RegisterFunction(Aentity_launcher::StaticClass(), "Use",(Native)&Aentity_launcher::execUse);
	}
	IMPLEMENT_CLASS(Aentity_launcher, 3896930353);
	void Aprop_move_base::OnChangePosition(float deltaLerp)
	{
		prop_move_base_eventOnChangePosition_Parms Parms;
		Parms.deltaLerp=deltaLerp;
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnChangePosition),&Parms);
	}
	void Aprop_move_base::OnClosed()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnClosed),NULL);
	}
	void Aprop_move_base::OnFullyClosed()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnFullyClosed),NULL);
	}
	void Aprop_move_base::OnFullyOpened()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnFullyOpened),NULL);
	}
	void Aprop_move_base::OnOpened()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnOpened),NULL);
	}
	void Aprop_move_base::OnUseLocked()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnUseLocked),NULL);
	}
	void Aprop_move_base::StaticRegisterNativesAprop_move_base()
	{
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "Close",(Native)&Aprop_move_base::execClose);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "FindMoveBaseByName",(Native)&Aprop_move_base::execFindMoveBaseByName);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "GetEstimatedTravelTime",(Native)&Aprop_move_base::execGetEstimatedTravelTime);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "GetPosition",(Native)&Aprop_move_base::execGetPosition);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "IsClosed",(Native)&Aprop_move_base::execIsClosed);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "IsClosing",(Native)&Aprop_move_base::execIsClosing);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "IsMoving",(Native)&Aprop_move_base::execIsMoving);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "IsOpen",(Native)&Aprop_move_base::execIsOpen);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "IsOpening",(Native)&Aprop_move_base::execIsOpening);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "Open",(Native)&Aprop_move_base::execOpen);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "Pause",(Native)&Aprop_move_base::execPause);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "SetPosition",(Native)&Aprop_move_base::execSetPosition);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "SetSpeed",(Native)&Aprop_move_base::execSetSpeed);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "Toggle",(Native)&Aprop_move_base::execToggle);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_move_base::StaticClass(), "Use",(Native)&Aprop_move_base::execUse);
	}
	IMPLEMENT_CLASS(Aprop_move_base, 2684363391);
	void Aprop_movelinear::StaticRegisterNativesAprop_movelinear()
	{
		FNativeFunctionRegistrar::RegisterFunction(Aprop_movelinear::StaticClass(), "GetEstimatedTravelTime",(Native)&Aprop_movelinear::execGetEstimatedTravelTime);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_movelinear::StaticClass(), "IsClosed",(Native)&Aprop_movelinear::execIsClosed);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_movelinear::StaticClass(), "IsOpen",(Native)&Aprop_movelinear::execIsOpen);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_movelinear::StaticClass(), "SetPosition",(Native)&Aprop_movelinear::execSetPosition);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_movelinear::StaticClass(), "SetQuarterPeriod",(Native)&Aprop_movelinear::execSetQuarterPeriod);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_movelinear::StaticClass(), "SetSpeed",(Native)&Aprop_movelinear::execSetSpeed);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_movelinear::StaticClass(), "Use",(Native)&Aprop_movelinear::execUse);
	}
	IMPLEMENT_CLASS(Aprop_movelinear, 459859586);
	void Aprop_worldbutton::OnPressed()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnPressed),NULL);
	}
	void Aprop_worldbutton::StaticRegisterNativesAprop_worldbutton()
	{
		FNativeFunctionRegistrar::RegisterFunction(Aprop_worldbutton::StaticClass(), "Press",(Native)&Aprop_worldbutton::execPress);
	}
	IMPLEMENT_CLASS(Aprop_worldbutton, 4036938409);
	void Aprop_rotator::StaticRegisterNativesAprop_rotator()
	{
		FNativeFunctionRegistrar::RegisterFunction(Aprop_rotator::StaticClass(), "IsClosed",(Native)&Aprop_rotator::execIsClosed);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_rotator::StaticClass(), "IsOpen",(Native)&Aprop_rotator::execIsOpen);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_rotator::StaticClass(), "SetPeriod",(Native)&Aprop_rotator::execSetPeriod);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_rotator::StaticClass(), "SetPosition",(Native)&Aprop_rotator::execSetPosition);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_rotator::StaticClass(), "SetSpeed",(Native)&Aprop_rotator::execSetSpeed);
	}
	IMPLEMENT_CLASS(Aprop_rotator, 1671795313);
	void Aprop_rotator_pivoted::StaticRegisterNativesAprop_rotator_pivoted()
	{
		FNativeFunctionRegistrar::RegisterFunction(Aprop_rotator_pivoted::StaticClass(), "GetTarget",(Native)&Aprop_rotator_pivoted::execGetTarget);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_rotator_pivoted::StaticClass(), "SetPosition",(Native)&Aprop_rotator_pivoted::execSetPosition);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_rotator_pivoted::StaticClass(), "SetTarget",(Native)&Aprop_rotator_pivoted::execSetTarget);
		FNativeFunctionRegistrar::RegisterFunction(Aprop_rotator_pivoted::StaticClass(), "SetTargetByName",(Native)&Aprop_rotator_pivoted::execSetTargetByName);
	}
	IMPLEMENT_CLASS(Aprop_rotator_pivoted, 4211152584);
	void Aworldui_base::OnActivate(AActor* caller)
	{
		worldui_base_eventOnActivate_Parms Parms;
		Parms.caller=caller;
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnActivate),&Parms);
	}
	void Aworldui_base::OnFocus(AActor* caller)
	{
		worldui_base_eventOnFocus_Parms Parms;
		Parms.caller=caller;
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnFocus),&Parms);
	}
	void Aworldui_base::OnLook(AActor* caller)
	{
		worldui_base_eventOnLook_Parms Parms;
		Parms.caller=caller;
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnLook),&Parms);
	}
	void Aworldui_base::StaticRegisterNativesAworldui_base()
	{
		FNativeFunctionRegistrar::RegisterFunction(Aworldui_base::StaticClass(), "Activate",(Native)&Aworldui_base::execActivate);
		FNativeFunctionRegistrar::RegisterFunction(Aworldui_base::StaticClass(), "Focus",(Native)&Aworldui_base::execFocus);
		FNativeFunctionRegistrar::RegisterFunction(Aworldui_base::StaticClass(), "Look",(Native)&Aworldui_base::execLook);
		FNativeFunctionRegistrar::RegisterFunction(Aworldui_base::StaticClass(), "Use",(Native)&Aworldui_base::execUse);
	}
	IMPLEMENT_CLASS(Aworldui_base, 2920272320);
	void Aworldui_sprite::StaticRegisterNativesAworldui_sprite()
	{
	}
	IMPLEMENT_CLASS(Aworldui_sprite, 367200799);
static class UEnum* FilterMode_StaticEnum()
{
	extern MMC_BOWLING_API class UPackage* Z_Construct_UPackage__Script_MMC_Bowling();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern MMC_BOWLING_API class UEnum* Z_Construct_UEnum_MMC_Bowling_FilterMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_MMC_Bowling_FilterMode, Z_Construct_UPackage__Script_MMC_Bowling(), TEXT("FilterMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_FilterMode(FilterMode_StaticEnum, TEXT("/Script/MMC_Bowling"), TEXT("FilterMode"), false, nullptr, nullptr);
static class UEnum* FilterType_StaticEnum()
{
	extern MMC_BOWLING_API class UPackage* Z_Construct_UPackage__Script_MMC_Bowling();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern MMC_BOWLING_API class UEnum* Z_Construct_UEnum_MMC_Bowling_FilterType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_MMC_Bowling_FilterType, Z_Construct_UPackage__Script_MMC_Bowling(), TEXT("FilterType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_FilterType(FilterType_StaticEnum, TEXT("/Script/MMC_Bowling"), TEXT("FilterType"), false, nullptr, nullptr);
	void Afilter_base::OnFail(const AActor* failedActor) const
	{
		filter_base_eventOnFail_Parms Parms;
		Parms.failedActor=failedActor;
		const_cast<Afilter_base*>(this)->ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnFail),&Parms);
	}
	void Afilter_base::OnPass(const AActor* passedActor) const
	{
		filter_base_eventOnPass_Parms Parms;
		Parms.passedActor=passedActor;
		const_cast<Afilter_base*>(this)->ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnPass),&Parms);
	}
	void Afilter_base::StaticRegisterNativesAfilter_base()
	{
		FNativeFunctionRegistrar::RegisterFunction(Afilter_base::StaticClass(), "FilterActor",(Native)&Afilter_base::execFilterActor);
		FNativeFunctionRegistrar::RegisterFunction(Afilter_base::StaticClass(), "FilterActorArray",(Native)&Afilter_base::execFilterActorArray);
		FNativeFunctionRegistrar::RegisterFunction(Afilter_base::StaticClass(), "FilterActorArrayByFilterName",(Native)&Afilter_base::execFilterActorArrayByFilterName);
		FNativeFunctionRegistrar::RegisterFunction(Afilter_base::StaticClass(), "FilterActorArrayRandomly",(Native)&Afilter_base::execFilterActorArrayRandomly);
		FNativeFunctionRegistrar::RegisterFunction(Afilter_base::StaticClass(), "FilterActorArrayRandomlyByFilterName",(Native)&Afilter_base::execFilterActorArrayRandomlyByFilterName);
		FNativeFunctionRegistrar::RegisterFunction(Afilter_base::StaticClass(), "FilterActorByFilterName",(Native)&Afilter_base::execFilterActorByFilterName);
		FNativeFunctionRegistrar::RegisterFunction(Afilter_base::StaticClass(), "FilterActorRandomly",(Native)&Afilter_base::execFilterActorRandomly);
		FNativeFunctionRegistrar::RegisterFunction(Afilter_base::StaticClass(), "FilterActorRandomlyByFilterName",(Native)&Afilter_base::execFilterActorRandomlyByFilterName);
		FNativeFunctionRegistrar::RegisterFunction(Afilter_base::StaticClass(), "FindFilterByName",(Native)&Afilter_base::execFindFilterByName);
	}
	IMPLEMENT_CLASS(Afilter_base, 1605055668);
	void Ainfo_hudhint::StaticRegisterNativesAinfo_hudhint()
	{
		FNativeFunctionRegistrar::RegisterFunction(Ainfo_hudhint::StaticClass(), "displayHintByName",(Native)&Ainfo_hudhint::execdisplayHintByName);
		FNativeFunctionRegistrar::RegisterFunction(Ainfo_hudhint::StaticClass(), "displayMessage",(Native)&Ainfo_hudhint::execdisplayMessage);
		FNativeFunctionRegistrar::RegisterFunction(Ainfo_hudhint::StaticClass(), "setColor",(Native)&Ainfo_hudhint::execsetColor);
	}
	IMPLEMENT_CLASS(Ainfo_hudhint, 1160347698);
	void Ainfo_target_character::StaticRegisterNativesAinfo_target_character()
	{
		FNativeFunctionRegistrar::RegisterFunction(Ainfo_target_character::StaticClass(), "AppendNearestCharacterTarget",(Native)&Ainfo_target_character::execAppendNearestCharacterTarget);
		FNativeFunctionRegistrar::RegisterFunction(Ainfo_target_character::StaticClass(), "GetInfo",(Native)&Ainfo_target_character::execGetInfo);
	}
	IMPLEMENT_CLASS(Ainfo_target_character, 2279484716);
	void Aworldui_text::OnEnter()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnEnter),NULL);
	}
	void Aworldui_text::OnTextChanged()
	{
		ProcessEvent(FindFunctionChecked(MMC_BOWLING_OnTextChanged),NULL);
	}
	void Aworldui_text::StaticRegisterNativesAworldui_text()
	{
		FNativeFunctionRegistrar::RegisterFunction(Aworldui_text::StaticClass(), "Append",(Native)&Aworldui_text::execAppend);
		FNativeFunctionRegistrar::RegisterFunction(Aworldui_text::StaticClass(), "AppendFromTarget",(Native)&Aworldui_text::execAppendFromTarget);
		FNativeFunctionRegistrar::RegisterFunction(Aworldui_text::StaticClass(), "AppendFromTargetLocation",(Native)&Aworldui_text::execAppendFromTargetLocation);
		FNativeFunctionRegistrar::RegisterFunction(Aworldui_text::StaticClass(), "BackSpace",(Native)&Aworldui_text::execBackSpace);
		FNativeFunctionRegistrar::RegisterFunction(Aworldui_text::StaticClass(), "Clear",(Native)&Aworldui_text::execClear);
		FNativeFunctionRegistrar::RegisterFunction(Aworldui_text::StaticClass(), "Enter",(Native)&Aworldui_text::execEnter);
	}
	IMPLEMENT_CLASS(Aworldui_text, 2807487202);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FTransform();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAudioComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundCue_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	ENGINE_API class UClass* Z_Construct_UClass_UBillboardComponent_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FColor();
	ENGINE_API class UClass* Z_Construct_UClass_ATextRenderActor();

	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Autil_debug_PrintBlurp();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Autil_debug_PrintFatal();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Autil_debug_PrintMessage();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Autil_debug_PrintWarning();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Autil_debug_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Autil_debug();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Ainfo_target_FindTargetByName();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Ainfo_target_FindTargetNearestToLocation();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Ainfo_target_GetInfo();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Ainfo_target_GetOffsetToActor();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Ainfo_target_GetTargetAtOrigin();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Ainfo_target_GetTransformToActor();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Ainfo_target_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Ainfo_target();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_base_CalculateHealth();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_base_FindActorByName();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_base_FindEntityByName();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_base_GetOffsetToActor();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_base_GetTransformToActor();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_base_OnKilled();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_base_OnUse();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_base_OnUseIgnored();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_base_ResetWorldTransform();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_base_TeleportToTarget();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_base_Use();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aentity_base_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aentity_base();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_pin_GetPinClosestToTarget();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_pin_OnEndRaiseAndLower();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_pin_OnEndResetAndLower();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_pin_OnRaiseAndLower();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_pin_OnResetAndLower();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_pin_RaiseAndLower();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_pin_ResetAndLower();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Abowling_pin_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Abowling_pin();
	MMC_BOWLING_API class UEnum* Z_Construct_UEnum_MMC_Bowling_EndgameType();
	MMC_BOWLING_API class UEnum* Z_Construct_UEnum_MMC_Bowling_ScoreType();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_appendNewScore();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_CalculateScore();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_formatScoreString();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_GameIsOver();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_GetAbsoluteScore();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_GetEndgameType();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_GetFallenPinCount();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_GetIntScoreOfFrame();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_GetNumberOfCurrentFrame();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_GetStringScoreOfFrame();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_GetStringScoreOfGame();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_loadScoreTable();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_OnGameover();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_OnSpare();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_OnStrike();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_RaiseAndLowerUnfallenPins();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_ResetAndLowerAllPins();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_ResetGame();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Abowling_system_WaitingForFirstThrow();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Abowling_system_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Abowling_system();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_launcher_launchProjectile();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_launcher_launchProjectileAngular();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_launcher_launchProjectileLinear();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_launcher_OnLaunch();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_launcher_setLaunchDirection();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_launcher_setLaunchDirectionTarget();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_launcher_setProjectile();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aentity_launcher_Use();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aentity_launcher_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aentity_launcher();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_Close();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_FindMoveBaseByName();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_GetEstimatedTravelTime();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_GetPosition();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_IsClosed();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_IsClosing();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_IsMoving();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_IsOpen();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_IsOpening();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_OnChangePosition();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_OnClosed();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_OnFullyClosed();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_OnFullyOpened();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_OnOpened();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_OnUseLocked();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_Open();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_Pause();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_SetPosition();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_SetSpeed();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_Toggle();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_move_base_Use();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aprop_move_base_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aprop_move_base();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_movelinear_GetEstimatedTravelTime();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_movelinear_IsClosed();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_movelinear_IsOpen();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_movelinear_SetPosition();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_movelinear_SetQuarterPeriod();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_movelinear_SetSpeed();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_movelinear_Use();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aprop_movelinear_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aprop_movelinear();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_worldbutton_OnPressed();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_worldbutton_Press();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aprop_worldbutton_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aprop_worldbutton();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_rotator_IsClosed();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_rotator_IsOpen();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_rotator_SetPeriod();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_rotator_SetPosition();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_rotator_SetSpeed();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aprop_rotator_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aprop_rotator();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_rotator_pivoted_GetTarget();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_rotator_pivoted_SetPosition();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_rotator_pivoted_SetTarget();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aprop_rotator_pivoted_SetTargetByName();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aprop_rotator_pivoted_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aprop_rotator_pivoted();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_base_Activate();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_base_Focus();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_base_Look();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_base_OnActivate();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_base_OnFocus();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_base_OnLook();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_base_Use();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aworldui_base_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aworldui_base();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aworldui_sprite_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aworldui_sprite();
	MMC_BOWLING_API class UEnum* Z_Construct_UEnum_MMC_Bowling_FilterMode();
	MMC_BOWLING_API class UEnum* Z_Construct_UEnum_MMC_Bowling_FilterType();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Afilter_base_FilterActor();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Afilter_base_FilterActorArray();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Afilter_base_FilterActorArrayByFilterName();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Afilter_base_FilterActorArrayRandomly();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Afilter_base_FilterActorArrayRandomlyByFilterName();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Afilter_base_FilterActorByFilterName();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Afilter_base_FilterActorRandomly();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Afilter_base_FilterActorRandomlyByFilterName();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Afilter_base_FindFilterByName();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Afilter_base_OnFail();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Afilter_base_OnPass();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Afilter_base_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Afilter_base();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Ainfo_hudhint_displayHintByName();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Ainfo_hudhint_displayMessage();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Ainfo_hudhint_setColor();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Ainfo_hudhint_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Ainfo_hudhint();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Ainfo_target_character_AppendNearestCharacterTarget();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Ainfo_target_character_GetInfo();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Ainfo_target_character_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Ainfo_target_character();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_text_Append();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_text_AppendFromTarget();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_text_AppendFromTargetLocation();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_text_BackSpace();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_text_Clear();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_text_Enter();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_text_OnEnter();
	MMC_BOWLING_API class UFunction* Z_Construct_UFunction_Aworldui_text_OnTextChanged();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aworldui_text_NoRegister();
	MMC_BOWLING_API class UClass* Z_Construct_UClass_Aworldui_text();
	MMC_BOWLING_API class UPackage* Z_Construct_UPackage__Script_MMC_Bowling();
	UFunction* Z_Construct_UFunction_Autil_debug_PrintBlurp()
	{
		struct util_debug_eventPrintBlurp_Parms
		{
			FString message;
		};
		UObject* Outer=Z_Construct_UClass_Autil_debug();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PrintBlurp"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(util_debug_eventPrintBlurp_Parms));
			UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, util_debug_eventPrintBlurp_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Debug"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("util_debug.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Prints a message for a very short amount of time - ideal for frame-by-frame"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Autil_debug_PrintFatal()
	{
		struct util_debug_eventPrintFatal_Parms
		{
			FString message;
		};
		UObject* Outer=Z_Construct_UClass_Autil_debug();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PrintFatal"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(util_debug_eventPrintFatal_Parms));
			UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, util_debug_eventPrintFatal_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Debug"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("util_debug.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Prints a eye-catching long-lasting red error message to the screen"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Autil_debug_PrintMessage()
	{
		struct util_debug_eventPrintMessage_Parms
		{
			FString message;
		};
		UObject* Outer=Z_Construct_UClass_Autil_debug();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PrintMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(util_debug_eventPrintMessage_Parms));
			UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, util_debug_eventPrintMessage_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Debug"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("util_debug.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Prints a generic message to the screen"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Autil_debug_PrintWarning()
	{
		struct util_debug_eventPrintWarning_Parms
		{
			FString message;
		};
		UObject* Outer=Z_Construct_UClass_Autil_debug();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PrintWarning"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(util_debug_eventPrintWarning_Parms));
			UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, util_debug_eventPrintWarning_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Debug"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("util_debug.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Prints a warning to the screen"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Autil_debug_NoRegister()
	{
		return Autil_debug::StaticClass();
	}
	UClass* Z_Construct_UClass_Autil_debug()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Autil_debug::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Autil_debug_PrintBlurp());
				OuterClass->LinkChild(Z_Construct_UFunction_Autil_debug_PrintFatal());
				OuterClass->LinkChild(Z_Construct_UFunction_Autil_debug_PrintMessage());
				OuterClass->LinkChild(Z_Construct_UFunction_Autil_debug_PrintWarning());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Autil_debug_PrintBlurp(), "PrintBlurp"); // 2777870075
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Autil_debug_PrintFatal(), "PrintFatal"); // 2564934558
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Autil_debug_PrintMessage(), "PrintMessage"); // 3716680404
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Autil_debug_PrintWarning(), "PrintWarning"); // 2247278385
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("util_debug.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("util_debug.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Autil_debug(Z_Construct_UClass_Autil_debug, &Autil_debug::StaticClass, TEXT("Autil_debug"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Autil_debug);
	UFunction* Z_Construct_UFunction_Ainfo_target_FindTargetByName()
	{
		struct info_target_eventFindTargetByName_Parms
		{
			FName targetName;
			const UObject* WorldContextObject;
			Ainfo_target* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Ainfo_target();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindTargetByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(info_target_eventFindTargetByName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, info_target_eventFindTargetByName_Parms), 0x0010000000000580, Z_Construct_UClass_Ainfo_target_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, info_target_eventFindTargetByName_Parms), 0x0010000000000082, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_targetName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("targetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(targetName, info_target_eventFindTargetByName_Parms), 0x0010000000000082);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("info_target"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("info_target.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given a name, finds the target in the world."));
			MetaData->SetValue(NewProp_WorldContextObject, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_targetName, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Ainfo_target_FindTargetNearestToLocation()
	{
		struct info_target_eventFindTargetNearestToLocation_Parms
		{
			FVector worldLocation;
			const UObject* worldContextObject;
			Ainfo_target* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Ainfo_target();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindTargetNearestToLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(info_target_eventFindTargetNearestToLocation_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, info_target_eventFindTargetNearestToLocation_Parms), 0x0010000000000580, Z_Construct_UClass_Ainfo_target_NoRegister());
			UProperty* NewProp_worldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("worldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(worldContextObject, info_target_eventFindTargetNearestToLocation_Parms), 0x0010000000000082, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_worldLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("worldLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(worldLocation, info_target_eventFindTargetNearestToLocation_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("info_target"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("info_target.h"));
			MetaData->SetValue(NewProp_worldContextObject, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_worldLocation, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Ainfo_target_GetInfo()
	{
		struct info_target_eventGetInfo_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Ainfo_target();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(info_target_eventGetInfo_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, info_target_eventGetInfo_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("info_target"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("info_target.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("For attaching extra information to the point in the world"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Ainfo_target_GetOffsetToActor()
	{
		struct info_target_eventGetOffsetToActor_Parms
		{
			AActor* fromActor;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Ainfo_target();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetOffsetToActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(info_target_eventGetOffsetToActor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, info_target_eventGetOffsetToActor_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_fromActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("fromActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(fromActor, info_target_eventGetOffsetToActor_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("info_target"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("info_target.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given an actor, returns the vector offset from this target to the given actor"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Ainfo_target_GetTargetAtOrigin()
	{
		struct info_target_eventGetTargetAtOrigin_Parms
		{
			UObject* WorldContextObject;
			Ainfo_target* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Ainfo_target();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTargetAtOrigin"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(info_target_eventGetTargetAtOrigin_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, info_target_eventGetTargetAtOrigin_Parms), 0x0010000000000580, Z_Construct_UClass_Ainfo_target_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, info_target_eventGetTargetAtOrigin_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("info_target"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("info_target.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the static target located at the origin"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Ainfo_target_GetTransformToActor()
	{
		struct info_target_eventGetTransformToActor_Parms
		{
			AActor* fromActor;
			FTransform ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Ainfo_target();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTransformToActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(info_target_eventGetTransformToActor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, info_target_eventGetTransformToActor_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_fromActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("fromActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(fromActor, info_target_eventGetTransformToActor_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("info_target"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("info_target.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given an actor, returns the transform from this target to the given actor"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Ainfo_target_NoRegister()
	{
		return Ainfo_target::StaticClass();
	}
	UClass* Z_Construct_UClass_Ainfo_target()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Ainfo_target::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Ainfo_target_FindTargetByName());
				OuterClass->LinkChild(Z_Construct_UFunction_Ainfo_target_FindTargetNearestToLocation());
				OuterClass->LinkChild(Z_Construct_UFunction_Ainfo_target_GetInfo());
				OuterClass->LinkChild(Z_Construct_UFunction_Ainfo_target_GetOffsetToActor());
				OuterClass->LinkChild(Z_Construct_UFunction_Ainfo_target_GetTargetAtOrigin());
				OuterClass->LinkChild(Z_Construct_UFunction_Ainfo_target_GetTransformToActor());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Ainfo_target_FindTargetByName(), "FindTargetByName"); // 27372757
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Ainfo_target_FindTargetNearestToLocation(), "FindTargetNearestToLocation"); // 3587774580
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Ainfo_target_GetInfo(), "GetInfo"); // 694423028
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Ainfo_target_GetOffsetToActor(), "GetOffsetToActor"); // 4083334231
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Ainfo_target_GetTargetAtOrigin(), "GetTargetAtOrigin"); // 3003452946
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Ainfo_target_GetTransformToActor(), "GetTransformToActor"); // 3792080477
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("info_target.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("info_target.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Ainfo_target(Z_Construct_UClass_Ainfo_target, &Ainfo_target::StaticClass, TEXT("Ainfo_target"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Ainfo_target);
	UFunction* Z_Construct_UFunction_Aentity_base_CalculateHealth()
	{
		struct entity_base_eventCalculateHealth_Parms
		{
			float delta;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CalculateHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(entity_base_eventCalculateHealth_Parms));
			UProperty* NewProp_delta = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("delta"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(delta, entity_base_eventCalculateHealth_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Function for modifying health"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_base_FindActorByName()
	{
		struct entity_base_eventFindActorByName_Parms
		{
			FName targetName;
			const UObject* WorldContextObject;
			AActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindActorByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(entity_base_eventFindActorByName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, entity_base_eventFindActorByName_Parms), 0x0010000000000580, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, entity_base_eventFindActorByName_Parms), 0x0010000000000082, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_targetName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("targetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(targetName, entity_base_eventFindActorByName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given a name, finds the actor in the world. Can return nullptr"));
			MetaData->SetValue(NewProp_WorldContextObject, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_base_FindEntityByName()
	{
		struct entity_base_eventFindEntityByName_Parms
		{
			FName targetName;
			Aentity_base* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindEntityByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(entity_base_eventFindEntityByName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, entity_base_eventFindEntityByName_Parms), 0x0010000000000580, Z_Construct_UClass_Aentity_base_NoRegister());
			UProperty* NewProp_targetName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("targetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(targetName, entity_base_eventFindEntityByName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given a name, finds the entity in the world. Can return nullptr so don't use without checking."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_base_GetOffsetToActor()
	{
		struct entity_base_eventGetOffsetToActor_Parms
		{
			AActor* fromActor;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetOffsetToActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54820401, 65535, sizeof(entity_base_eventGetOffsetToActor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, entity_base_eventGetOffsetToActor_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_fromActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("fromActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(fromActor, entity_base_eventGetOffsetToActor_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given an actor, returns the vector offset from this target to the given actor"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_base_GetTransformToActor()
	{
		struct entity_base_eventGetTransformToActor_Parms
		{
			AActor* fromActor;
			FTransform ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTransformToActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54820401, 65535, sizeof(entity_base_eventGetTransformToActor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, entity_base_eventGetTransformToActor_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FTransform());
			UProperty* NewProp_fromActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("fromActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(fromActor, entity_base_eventGetTransformToActor_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given an actor, returns the transform from this target to the given actor"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_base_OnKilled()
	{
		UObject* Outer=Z_Construct_UClass_Aentity_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnKilled"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_base_OnUse()
	{
		UObject* Outer=Z_Construct_UClass_Aentity_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnUse"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(entity_base_eventOnUse_Parms));
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, entity_base_eventOnUse_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Extensible use event. Called at the end of Use() function"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_base_OnUseIgnored()
	{
		UObject* Outer=Z_Construct_UClass_Aentity_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnUseIgnored"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(entity_base_eventOnUseIgnored_Parms));
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, entity_base_eventOnUseIgnored_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Extensible use event. Called if Use() is called but bIgnoreUse is true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_base_ResetWorldTransform()
	{
		UObject* Outer=Z_Construct_UClass_Aentity_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ResetWorldTransform"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Resets the object to its starting location and starting rotation"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_base_TeleportToTarget()
	{
		UObject* Outer=Z_Construct_UClass_Aentity_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TeleportToTarget"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_base_Use()
	{
		struct entity_base_eventUse_Parms
		{
			AActor* caller;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Use"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(entity_base_eventUse_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, entity_base_eventUse_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, entity_base_eventUse_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, entity_base_eventUse_Parms), sizeof(bool), true);
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, entity_base_eventUse_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("All-purpose extensible use function"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Aentity_base_NoRegister()
	{
		return Aentity_base::StaticClass();
	}
	UClass* Z_Construct_UClass_Aentity_base()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Aentity_base::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_base_CalculateHealth());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_base_FindActorByName());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_base_FindEntityByName());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_base_GetOffsetToActor());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_base_GetTransformToActor());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_base_OnKilled());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_base_OnUse());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_base_OnUseIgnored());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_base_ResetWorldTransform());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_base_TeleportToTarget());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_base_Use());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIgnoreUse, Aentity_base, bool);
				UProperty* NewProp_bIgnoreUse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIgnoreUse"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIgnoreUse, Aentity_base), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIgnoreUse, Aentity_base), sizeof(bool), true);
				UProperty* NewProp_deathDelay = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("deathDelay"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(deathDelay, Aentity_base), 0x0010000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(destroyOnDeath, Aentity_base, bool);
				UProperty* NewProp_destroyOnDeath = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("destroyOnDeath"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(destroyOnDeath, Aentity_base), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(destroyOnDeath, Aentity_base), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(isDead, Aentity_base, bool);
				UProperty* NewProp_isDead = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("isDead"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(isDead, Aentity_base), 0x0010000000020015, CPP_BOOL_PROPERTY_BITMASK(isDead, Aentity_base), sizeof(bool), true);
				UProperty* NewProp_health = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("health"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(health, Aentity_base), 0x0010000000020015);
				UProperty* NewProp_initialHealth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("initialHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(initialHealth, Aentity_base), 0x0010000000000005);
				UProperty* NewProp_teleportTargetName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teleportTargetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(teleportTargetName, Aentity_base), 0x0010000000000015);
				UProperty* NewProp_spawnTargetName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("spawnTargetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(spawnTargetName, Aentity_base), 0x0010000000000015);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bToggleVisibilityOnStart, Aentity_base, bool);
				UProperty* NewProp_bToggleVisibilityOnStart = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bToggleVisibilityOnStart"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bToggleVisibilityOnStart, Aentity_base), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bToggleVisibilityOnStart, Aentity_base), sizeof(bool), true);
				UProperty* NewProp_EntityModel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EntityModel"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EntityModel, Aentity_base), 0x00100000000a001d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_base_CalculateHealth(), "CalculateHealth"); // 1065234854
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_base_FindActorByName(), "FindActorByName"); // 4144993811
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_base_FindEntityByName(), "FindEntityByName"); // 2802059885
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_base_GetOffsetToActor(), "GetOffsetToActor"); // 2046881981
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_base_GetTransformToActor(), "GetTransformToActor"); // 2709958221
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_base_OnKilled(), "OnKilled"); // 4091202877
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_base_OnUse(), "OnUse"); // 1327113930
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_base_OnUseIgnored(), "OnUseIgnored"); // 2819711334
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_base_ResetWorldTransform(), "ResetWorldTransform"); // 718441037
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_base_TeleportToTarget(), "TeleportToTarget"); // 1571348077
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_base_Use(), "Use"); // 3452921415
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("entity_base.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
				MetaData->SetValue(NewProp_bIgnoreUse, TEXT("Category"), TEXT("entity_base"));
				MetaData->SetValue(NewProp_bIgnoreUse, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
				MetaData->SetValue(NewProp_bIgnoreUse, TEXT("ToolTip"), TEXT("Whether or not to allow player to press/use. Child classes must check it themselves"));
				MetaData->SetValue(NewProp_deathDelay, TEXT("Category"), TEXT("entity_base"));
				MetaData->SetValue(NewProp_deathDelay, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
				MetaData->SetValue(NewProp_deathDelay, TEXT("ToolTip"), TEXT("Float for time delay before destroying after death"));
				MetaData->SetValue(NewProp_destroyOnDeath, TEXT("Category"), TEXT("entity_base"));
				MetaData->SetValue(NewProp_destroyOnDeath, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
				MetaData->SetValue(NewProp_destroyOnDeath, TEXT("ToolTip"), TEXT("Boolean for whether or not we should destroy the actor"));
				MetaData->SetValue(NewProp_isDead, TEXT("Category"), TEXT("entity_base"));
				MetaData->SetValue(NewProp_isDead, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
				MetaData->SetValue(NewProp_isDead, TEXT("ToolTip"), TEXT("isDead Property"));
				MetaData->SetValue(NewProp_health, TEXT("Category"), TEXT("entity_base"));
				MetaData->SetValue(NewProp_health, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
				MetaData->SetValue(NewProp_health, TEXT("ToolTip"), TEXT("Health Property"));
				MetaData->SetValue(NewProp_initialHealth, TEXT("Category"), TEXT("entity_base"));
				MetaData->SetValue(NewProp_initialHealth, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
				MetaData->SetValue(NewProp_initialHealth, TEXT("ToolTip"), TEXT("Initial Health Property"));
				MetaData->SetValue(NewProp_teleportTargetName, TEXT("Category"), TEXT("entity_base"));
				MetaData->SetValue(NewProp_teleportTargetName, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
				MetaData->SetValue(NewProp_teleportTargetName, TEXT("ToolTip"), TEXT("If specified, entity will teleport to this target on TeleportToTarget(...)"));
				MetaData->SetValue(NewProp_spawnTargetName, TEXT("Category"), TEXT("entity_base"));
				MetaData->SetValue(NewProp_spawnTargetName, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
				MetaData->SetValue(NewProp_spawnTargetName, TEXT("ToolTip"), TEXT("If specified, spawns the entity_base at this target instead of here"));
				MetaData->SetValue(NewProp_bToggleVisibilityOnStart, TEXT("Category"), TEXT("entity_base"));
				MetaData->SetValue(NewProp_bToggleVisibilityOnStart, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
				MetaData->SetValue(NewProp_bToggleVisibilityOnStart, TEXT("ToolTip"), TEXT("Whether or not to toggle model visibility on BeginPlay"));
				MetaData->SetValue(NewProp_EntityModel, TEXT("Category"), TEXT("entity_base"));
				MetaData->SetValue(NewProp_EntityModel, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_EntityModel, TEXT("ModuleRelativePath"), TEXT("entity_base.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Aentity_base(Z_Construct_UClass_Aentity_base, &Aentity_base::StaticClass, TEXT("Aentity_base"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Aentity_base);
	UFunction* Z_Construct_UFunction_Abowling_pin_GetPinClosestToTarget()
	{
		struct bowling_pin_eventGetPinClosestToTarget_Parms
		{
			FName targetName;
			UObject* WorldContextObject;
			Abowling_pin* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_pin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPinClosestToTarget"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(bowling_pin_eventGetPinClosestToTarget_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, bowling_pin_eventGetPinClosestToTarget_Parms), 0x0010000000000580, Z_Construct_UClass_Abowling_pin_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, bowling_pin_eventGetPinClosestToTarget_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_targetName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("targetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(targetName, bowling_pin_eventGetPinClosestToTarget_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_pin"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_pin.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_pin_OnEndRaiseAndLower()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_pin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnEndRaiseAndLower"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_pin"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_pin.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_pin_OnEndResetAndLower()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_pin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnEndResetAndLower"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_pin"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_pin.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_pin_OnRaiseAndLower()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_pin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRaiseAndLower"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_pin"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_pin.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Use these two events to disable physics!"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_pin_OnResetAndLower()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_pin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnResetAndLower"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_pin"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_pin.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_pin_RaiseAndLower()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_pin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RaiseAndLower"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_pin"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_pin.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("raises and then lowers the pins"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_pin_ResetAndLower()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_pin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ResetAndLower"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_pin"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_pin.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Teleports the pins to above their starting locations and then lowers them"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Abowling_pin_NoRegister()
	{
		return Abowling_pin::StaticClass();
	}
	UClass* Z_Construct_UClass_Abowling_pin()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_Aentity_base();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Abowling_pin::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_pin_GetPinClosestToTarget());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_pin_OnEndRaiseAndLower());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_pin_OnEndResetAndLower());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_pin_OnRaiseAndLower());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_pin_OnResetAndLower());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_pin_RaiseAndLower());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_pin_ResetAndLower());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_RaiseAndLowerTimeScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RaiseAndLowerTimeScale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RaiseAndLowerTimeScale, Abowling_pin), 0x0010000000000005);
				UProperty* NewProp_RaiseAndLowerAmplitude = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RaiseAndLowerAmplitude"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(RaiseAndLowerAmplitude, Abowling_pin), 0x0010000000000005);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(isInGame, Abowling_pin, bool);
				UProperty* NewProp_isInGame = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("isInGame"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(isInGame, Abowling_pin), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(isInGame, Abowling_pin), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_pin_GetPinClosestToTarget(), "GetPinClosestToTarget"); // 3382962484
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_pin_OnEndRaiseAndLower(), "OnEndRaiseAndLower"); // 3323806831
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_pin_OnEndResetAndLower(), "OnEndResetAndLower"); // 2596535927
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_pin_OnRaiseAndLower(), "OnRaiseAndLower"); // 4084718408
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_pin_OnResetAndLower(), "OnResetAndLower"); // 4281530489
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_pin_RaiseAndLower(), "RaiseAndLower"); // 906249185
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_pin_ResetAndLower(), "ResetAndLower"); // 3737521378
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("bowling_pin.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("bowling_pin.h"));
				MetaData->SetValue(NewProp_RaiseAndLowerTimeScale, TEXT("Category"), TEXT("bowling_pin"));
				MetaData->SetValue(NewProp_RaiseAndLowerTimeScale, TEXT("ModuleRelativePath"), TEXT("bowling_pin.h"));
				MetaData->SetValue(NewProp_RaiseAndLowerAmplitude, TEXT("Category"), TEXT("bowling_pin"));
				MetaData->SetValue(NewProp_RaiseAndLowerAmplitude, TEXT("ModuleRelativePath"), TEXT("bowling_pin.h"));
				MetaData->SetValue(NewProp_isInGame, TEXT("Category"), TEXT("bowling_pin"));
				MetaData->SetValue(NewProp_isInGame, TEXT("ModuleRelativePath"), TEXT("bowling_pin.h"));
				MetaData->SetValue(NewProp_isInGame, TEXT("ToolTip"), TEXT("Whether or not to have this bowling pin interact with the bowling_system in counting the score"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Abowling_pin(Z_Construct_UClass_Abowling_pin, &Abowling_pin::StaticClass, TEXT("Abowling_pin"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Abowling_pin);
	UEnum* Z_Construct_UEnum_MMC_Bowling_EndgameType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_MMC_Bowling();
		extern uint32 Get_Z_Construct_UEnum_MMC_Bowling_EndgameType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EndgameType"), 0, Get_Z_Construct_UEnum_MMC_Bowling_EndgameType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EndgameType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Undetermined")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("DefaultEnding")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpareEnding")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("StrikeEnding")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EndgameType_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EndgameType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("DefaultEnding.DisplayName"), TEXT("DefaultEnding"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SpareEnding.DisplayName"), TEXT("SpareEnding"));
			MetaData->SetValue(ReturnEnum, TEXT("StrikeEnding.DisplayName"), TEXT("StrikeEnding"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("enumerator for the endgame type. This is determined by the scores of the last frames"));
			MetaData->SetValue(ReturnEnum, TEXT("Undetermined.DisplayName"), TEXT("Undetermined"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_MMC_Bowling_EndgameType_CRC() { return 1483088193U; }
	UEnum* Z_Construct_UEnum_MMC_Bowling_ScoreType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_MMC_Bowling();
		extern uint32 Get_Z_Construct_UEnum_MMC_Bowling_ScoreType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ScoreType"), 0, Get_Z_Construct_UEnum_MMC_Bowling_ScoreType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ScoreType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FirstThrow")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SecondThrow")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("NativeScore")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("AbsoluteNativeScore")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("AbsoluteScore")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ScoreType_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ScoreType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AbsoluteNativeScore.DisplayName"), TEXT("AbsoluteNativeScore"));
			MetaData->SetValue(ReturnEnum, TEXT("AbsoluteScore.DisplayName"), TEXT("AbsoluteScore"));
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("FirstThrow.DisplayName"), TEXT("FirstThrow"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NativeScore.DisplayName"), TEXT("NativeScore"));
			MetaData->SetValue(ReturnEnum, TEXT("SecondThrow.DisplayName"), TEXT("SecondThrow"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("enumerator for the score type, for getting the different type of scores"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_MMC_Bowling_ScoreType_CRC() { return 3091522766U; }
	UFunction* Z_Construct_UFunction_Abowling_system_appendNewScore()
	{
		struct bowling_system_eventappendNewScore_Parms
		{
			int32 iScore;
			FName playerName;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("appendNewScore"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(bowling_system_eventappendNewScore_Parms));
			UProperty* NewProp_playerName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("playerName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(playerName, bowling_system_eventappendNewScore_Parms), 0x0010000000000080);
			UProperty* NewProp_iScore = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("iScore"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(iScore, bowling_system_eventappendNewScore_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_CalculateScore()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CalculateScore"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Counts the fallen bowling pins, and calculates the score for the current frame.\nhandles the strike count and strike/spare bonuses"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_formatScoreString()
	{
		struct bowling_system_eventformatScoreString_Parms
		{
			FString rawInputString;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("formatScoreString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(bowling_system_eventformatScoreString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, bowling_system_eventformatScoreString_Parms), 0x0010000000000580);
			UProperty* NewProp_rawInputString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("rawInputString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(rawInputString, bowling_system_eventformatScoreString_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Adds the necessary amount of spaces"));
			MetaData->SetValue(NewProp_rawInputString, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_GameIsOver()
	{
		struct bowling_system_eventGameIsOver_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GameIsOver"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(bowling_system_eventGameIsOver_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, bowling_system_eventGameIsOver_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, bowling_system_eventGameIsOver_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, bowling_system_eventGameIsOver_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_GetAbsoluteScore()
	{
		struct bowling_system_eventGetAbsoluteScore_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAbsoluteScore"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(bowling_system_eventGetAbsoluteScore_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(ReturnValue, bowling_system_eventGetAbsoluteScore_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the total score for the game, i.e. the absolute score of the current frame."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_GetEndgameType()
	{
		struct bowling_system_eventGetEndgameType_Parms
		{
			TEnumAsByte<EndgameType> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetEndgameType"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(bowling_system_eventGetEndgameType_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, bowling_system_eventGetEndgameType_Parms), 0x0010000000000580, Z_Construct_UEnum_MMC_Bowling_EndgameType());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Blueprint-able accesor for the most recently calculated EndgameType"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_GetFallenPinCount()
	{
		struct bowling_system_eventGetFallenPinCount_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFallenPinCount"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(bowling_system_eventGetFallenPinCount_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(ReturnValue, bowling_system_eventGetFallenPinCount_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Gets the number of fallen pins. Does NOT do scoring calculations."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_GetIntScoreOfFrame()
	{
		struct bowling_system_eventGetIntScoreOfFrame_Parms
		{
			int32 frameNumber;
			TEnumAsByte<ScoreType> type;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetIntScoreOfFrame"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(bowling_system_eventGetIntScoreOfFrame_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(ReturnValue, bowling_system_eventGetIntScoreOfFrame_Parms), 0x0010000000000580);
			UProperty* NewProp_type = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("type"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(type, bowling_system_eventGetIntScoreOfFrame_Parms), 0x0010000000000080, Z_Construct_UEnum_MMC_Bowling_ScoreType());
			UProperty* NewProp_frameNumber = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("frameNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(frameNumber, bowling_system_eventGetIntScoreOfFrame_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given a frame number and a score type, returns the desired integer score"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_GetNumberOfCurrentFrame()
	{
		struct bowling_system_eventGetNumberOfCurrentFrame_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNumberOfCurrentFrame"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(bowling_system_eventGetNumberOfCurrentFrame_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(ReturnValue, bowling_system_eventGetNumberOfCurrentFrame_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the number of the current frame, 1-12"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_GetStringScoreOfFrame()
	{
		struct bowling_system_eventGetStringScoreOfFrame_Parms
		{
			int32 frameNumber;
			TEnumAsByte<ScoreType> type;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetStringScoreOfFrame"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(bowling_system_eventGetStringScoreOfFrame_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, bowling_system_eventGetStringScoreOfFrame_Parms), 0x0010000000000580);
			UProperty* NewProp_type = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("type"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(type, bowling_system_eventGetStringScoreOfFrame_Parms), 0x0010000000000080, Z_Construct_UEnum_MMC_Bowling_ScoreType());
			UProperty* NewProp_frameNumber = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("frameNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(frameNumber, bowling_system_eventGetStringScoreOfFrame_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given a frame number and a score type, returns a string representation of the score"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_GetStringScoreOfGame()
	{
		struct bowling_system_eventGetStringScoreOfGame_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetStringScoreOfGame"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(bowling_system_eventGetStringScoreOfGame_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, bowling_system_eventGetStringScoreOfGame_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns a string containing the scores of the all the frames"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_loadScoreTable()
	{
		struct bowling_system_eventloadScoreTable_Parms
		{
			TArray<FString> loadedArray;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("loadScoreTable"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(bowling_system_eventloadScoreTable_Parms));
			UProperty* NewProp_loadedArray = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("loadedArray"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(loadedArray, bowling_system_eventloadScoreTable_Parms), 0x0010000008000180);
			UProperty* NewProp_loadedArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_loadedArray, TEXT("loadedArray"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_OnGameover()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGameover"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_OnSpare()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSpare"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_OnStrike()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnStrike"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(bowling_system_eventOnStrike_Parms));
			UProperty* NewProp_count = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("count"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(count, bowling_system_eventOnStrike_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_RaiseAndLowerUnfallenPins()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RaiseAndLowerUnfallenPins"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Iterates through all of the pins and raises and lowers those which have not fallen"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_ResetAndLowerAllPins()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ResetAndLowerAllPins"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Teleports all of the pins above their starting locations and lowers them onto the lane"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_ResetGame()
	{
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ResetGame"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Resets all the scores of the game"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Abowling_system_WaitingForFirstThrow()
	{
		struct bowling_system_eventWaitingForFirstThrow_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Abowling_system();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WaitingForFirstThrow"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(bowling_system_eventWaitingForFirstThrow_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, bowling_system_eventWaitingForFirstThrow_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, bowling_system_eventWaitingForFirstThrow_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, bowling_system_eventWaitingForFirstThrow_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("bowling_system"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns true if the game is waiting for the user's first throw, false otherwise."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Abowling_system_NoRegister()
	{
		return Abowling_system::StaticClass();
	}
	UClass* Z_Construct_UClass_Abowling_system()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Abowling_system::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_appendNewScore());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_CalculateScore());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_formatScoreString());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_GameIsOver());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_GetAbsoluteScore());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_GetEndgameType());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_GetFallenPinCount());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_GetIntScoreOfFrame());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_GetNumberOfCurrentFrame());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_GetStringScoreOfFrame());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_GetStringScoreOfGame());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_loadScoreTable());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_OnGameover());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_OnSpare());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_OnStrike());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_RaiseAndLowerUnfallenPins());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_ResetAndLowerAllPins());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_ResetGame());
				OuterClass->LinkChild(Z_Construct_UFunction_Abowling_system_WaitingForFirstThrow());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_strikeCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("strikeCount"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(strikeCount, Abowling_system), 0x0010000000020015);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_appendNewScore(), "appendNewScore"); // 4223406114
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_CalculateScore(), "CalculateScore"); // 4293280036
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_formatScoreString(), "formatScoreString"); // 3549890515
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_GameIsOver(), "GameIsOver"); // 12576064
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_GetAbsoluteScore(), "GetAbsoluteScore"); // 112552043
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_GetEndgameType(), "GetEndgameType"); // 2538102629
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_GetFallenPinCount(), "GetFallenPinCount"); // 3263675764
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_GetIntScoreOfFrame(), "GetIntScoreOfFrame"); // 3141931100
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_GetNumberOfCurrentFrame(), "GetNumberOfCurrentFrame"); // 2100713436
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_GetStringScoreOfFrame(), "GetStringScoreOfFrame"); // 3772681617
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_GetStringScoreOfGame(), "GetStringScoreOfGame"); // 2512105137
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_loadScoreTable(), "loadScoreTable"); // 2056634768
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_OnGameover(), "OnGameover"); // 1342974699
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_OnSpare(), "OnSpare"); // 221301318
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_OnStrike(), "OnStrike"); // 3245652482
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_RaiseAndLowerUnfallenPins(), "RaiseAndLowerUnfallenPins"); // 2442404868
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_ResetAndLowerAllPins(), "ResetAndLowerAllPins"); // 2936856938
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_ResetGame(), "ResetGame"); // 3011393608
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Abowling_system_WaitingForFirstThrow(), "WaitingForFirstThrow"); // 374122224
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("bowling_system.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
				MetaData->SetValue(NewProp_strikeCount, TEXT("Category"), TEXT("bowling_system"));
				MetaData->SetValue(NewProp_strikeCount, TEXT("ModuleRelativePath"), TEXT("bowling_system.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Abowling_system(Z_Construct_UClass_Abowling_system, &Abowling_system::StaticClass, TEXT("Abowling_system"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Abowling_system);
	UFunction* Z_Construct_UFunction_Aentity_launcher_launchProjectile()
	{
		struct entity_launcher_eventlaunchProjectile_Parms
		{
			bool teleportBeforeLaunch;
			bool addToCurrent;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_launcher();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("launchProjectile"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(entity_launcher_eventlaunchProjectile_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(addToCurrent, entity_launcher_eventlaunchProjectile_Parms, bool);
			UProperty* NewProp_addToCurrent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("addToCurrent"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(addToCurrent, entity_launcher_eventlaunchProjectile_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(addToCurrent, entity_launcher_eventlaunchProjectile_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(teleportBeforeLaunch, entity_launcher_eventlaunchProjectile_Parms, bool);
			UProperty* NewProp_teleportBeforeLaunch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("teleportBeforeLaunch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(teleportBeforeLaunch, entity_launcher_eventlaunchProjectile_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(teleportBeforeLaunch, entity_launcher_eventlaunchProjectile_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_launcher"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Launches the projectile both linearly and angularly"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_launcher_launchProjectileAngular()
	{
		struct entity_launcher_eventlaunchProjectileAngular_Parms
		{
			bool teleportBeforeLaunch;
			bool addToCurrentVelocity;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_launcher();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("launchProjectileAngular"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(entity_launcher_eventlaunchProjectileAngular_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(addToCurrentVelocity, entity_launcher_eventlaunchProjectileAngular_Parms, bool);
			UProperty* NewProp_addToCurrentVelocity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("addToCurrentVelocity"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(addToCurrentVelocity, entity_launcher_eventlaunchProjectileAngular_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(addToCurrentVelocity, entity_launcher_eventlaunchProjectileAngular_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(teleportBeforeLaunch, entity_launcher_eventlaunchProjectileAngular_Parms, bool);
			UProperty* NewProp_teleportBeforeLaunch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("teleportBeforeLaunch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(teleportBeforeLaunch, entity_launcher_eventlaunchProjectileAngular_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(teleportBeforeLaunch, entity_launcher_eventlaunchProjectileAngular_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_launcher_angular"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Launches the projectile into the angular velocity"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_launcher_launchProjectileLinear()
	{
		struct entity_launcher_eventlaunchProjectileLinear_Parms
		{
			bool teleportBeforeLaunch;
			bool addToCurrentVelocity;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_launcher();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("launchProjectileLinear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(entity_launcher_eventlaunchProjectileLinear_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(addToCurrentVelocity, entity_launcher_eventlaunchProjectileLinear_Parms, bool);
			UProperty* NewProp_addToCurrentVelocity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("addToCurrentVelocity"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(addToCurrentVelocity, entity_launcher_eventlaunchProjectileLinear_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(addToCurrentVelocity, entity_launcher_eventlaunchProjectileLinear_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(teleportBeforeLaunch, entity_launcher_eventlaunchProjectileLinear_Parms, bool);
			UProperty* NewProp_teleportBeforeLaunch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("teleportBeforeLaunch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(teleportBeforeLaunch, entity_launcher_eventlaunchProjectileLinear_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(teleportBeforeLaunch, entity_launcher_eventlaunchProjectileLinear_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_launcher"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Launches the projectile in the given linear direction"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_launcher_OnLaunch()
	{
		UObject* Outer=Z_Construct_UClass_Aentity_launcher();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnLaunch"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08820800, 65535, sizeof(entity_launcher_eventOnLaunch_Parms));
			UProperty* NewProp_newVelocity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newVelocity"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(newVelocity, entity_launcher_eventOnLaunch_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_launcher"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Implementable event for when the projectile is launched"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_launcher_setLaunchDirection()
	{
		struct entity_launcher_eventsetLaunchDirection_Parms
		{
			FVector newDirection;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_launcher();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("setLaunchDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(entity_launcher_eventsetLaunchDirection_Parms));
			UProperty* NewProp_newDirection = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(newDirection, entity_launcher_eventsetLaunchDirection_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_launcher"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given a vector, sets the launch direction. If bMakeLaunchDirectionUnit is true, converts input into unit vector"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_launcher_setLaunchDirectionTarget()
	{
		struct entity_launcher_eventsetLaunchDirectionTarget_Parms
		{
			FName nameOfNewTarget;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_launcher();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("setLaunchDirectionTarget"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(entity_launcher_eventsetLaunchDirectionTarget_Parms));
			UProperty* NewProp_nameOfNewTarget = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("nameOfNewTarget"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(nameOfNewTarget, entity_launcher_eventsetLaunchDirectionTarget_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_launcher"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given the name of a new info_target, sets the new target for the entity_launcher"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_launcher_setProjectile()
	{
		struct entity_launcher_eventsetProjectile_Parms
		{
			FName newProjectileName;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_launcher();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("setProjectile"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(entity_launcher_eventsetProjectile_Parms));
			UProperty* NewProp_newProjectileName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newProjectileName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(newProjectileName, entity_launcher_eventsetProjectile_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_launcher"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given the name of an entity_base, sets it as projectile"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aentity_launcher_Use()
	{
		struct entity_launcher_eventUse_Parms
		{
			AActor* caller;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aentity_launcher();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Use"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(entity_launcher_eventUse_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, entity_launcher_eventUse_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, entity_launcher_eventUse_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, entity_launcher_eventUse_Parms), sizeof(bool), true);
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, entity_launcher_eventUse_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("entity_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Override for this entity_base is used - will launch the projectile, teleporting without old velocity"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Aentity_launcher_NoRegister()
	{
		return Aentity_launcher::StaticClass();
	}
	UClass* Z_Construct_UClass_Aentity_launcher()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_Aentity_base();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Aentity_launcher::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_launcher_launchProjectile());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_launcher_launchProjectileAngular());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_launcher_launchProjectileLinear());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_launcher_OnLaunch());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_launcher_setLaunchDirection());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_launcher_setLaunchDirectionTarget());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_launcher_setProjectile());
				OuterClass->LinkChild(Z_Construct_UFunction_Aentity_launcher_Use());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRotateToLaunchDirection, Aentity_launcher, bool);
				UProperty* NewProp_bRotateToLaunchDirection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRotateToLaunchDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRotateToLaunchDirection, Aentity_launcher), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bRotateToLaunchDirection, Aentity_launcher), sizeof(bool), true);
				UProperty* NewProp_angularLaunchLerp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("angularLaunchLerp"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(angularLaunchLerp, Aentity_launcher), 0x0010000000000005);
				UProperty* NewProp_angularLaunchSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("angularLaunchSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(angularLaunchSpeed, Aentity_launcher), 0x0010000000000005, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_projectileName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("projectileName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(projectileName, Aentity_launcher), 0x0010000000000015);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bLaunchOnStart, Aentity_launcher, bool);
				UProperty* NewProp_bLaunchOnStart = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bLaunchOnStart"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bLaunchOnStart, Aentity_launcher), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bLaunchOnStart, Aentity_launcher), sizeof(bool), true);
				UProperty* NewProp_launchLerp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("launchLerp"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(launchLerp, Aentity_launcher), 0x0010000000000005);
				UProperty* NewProp_launchSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("launchSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(launchSpeed, Aentity_launcher), 0x0010000000000005);
				UProperty* NewProp_launchTargetName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("launchTargetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(launchTargetName, Aentity_launcher), 0x0010000000000015);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMakeLaunchDirectionUnit, Aentity_launcher, bool);
				UProperty* NewProp_bMakeLaunchDirectionUnit = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMakeLaunchDirectionUnit"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMakeLaunchDirectionUnit, Aentity_launcher), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bMakeLaunchDirectionUnit, Aentity_launcher), sizeof(bool), true);
				UProperty* NewProp_launchDirection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("launchDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(launchDirection, Aentity_launcher), 0x0010000000000015, Z_Construct_UScriptStruct_FVector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_launcher_launchProjectile(), "launchProjectile"); // 4188146506
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_launcher_launchProjectileAngular(), "launchProjectileAngular"); // 524290148
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_launcher_launchProjectileLinear(), "launchProjectileLinear"); // 3799855463
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_launcher_OnLaunch(), "OnLaunch"); // 3842619658
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_launcher_setLaunchDirection(), "setLaunchDirection"); // 2814116322
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_launcher_setLaunchDirectionTarget(), "setLaunchDirectionTarget"); // 84901878
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_launcher_setProjectile(), "setProjectile"); // 2985890431
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aentity_launcher_Use(), "Use"); // 2344943976
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(NewProp_bRotateToLaunchDirection, TEXT("Category"), TEXT("entity_launcher_angular"));
				MetaData->SetValue(NewProp_bRotateToLaunchDirection, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(NewProp_bRotateToLaunchDirection, TEXT("ToolTip"), TEXT("If true, the new angular velocity will rotate around the LaunchDirection on launch-time"));
				MetaData->SetValue(NewProp_angularLaunchLerp, TEXT("Category"), TEXT("entity_launcher_angular"));
				MetaData->SetValue(NewProp_angularLaunchLerp, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(NewProp_angularLaunchLerp, TEXT("ToolTip"), TEXT("Linear interpolation between old and new angular velocities on launch. Old is 0, new is 1"));
				MetaData->SetValue(NewProp_angularLaunchSpeed, TEXT("Category"), TEXT("entity_launcher_angular"));
				MetaData->SetValue(NewProp_angularLaunchSpeed, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(NewProp_angularLaunchSpeed, TEXT("ToolTip"), TEXT("Optional angular launching - sets the projectile's angular velocity"));
				MetaData->SetValue(NewProp_projectileName, TEXT("Category"), TEXT("entity_launcher"));
				MetaData->SetValue(NewProp_projectileName, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(NewProp_projectileName, TEXT("ToolTip"), TEXT("Name of the entity_base to launch"));
				MetaData->SetValue(NewProp_bLaunchOnStart, TEXT("Category"), TEXT("entity_launcher"));
				MetaData->SetValue(NewProp_bLaunchOnStart, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(NewProp_bLaunchOnStart, TEXT("ToolTip"), TEXT("Whether or not to immediately launch the projectile on BeginPlay"));
				MetaData->SetValue(NewProp_launchLerp, TEXT("Category"), TEXT("entity_launcher"));
				MetaData->SetValue(NewProp_launchLerp, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(NewProp_launchLerp, TEXT("ToolTip"), TEXT("Linear interpolation between old velocity and new velocity on launch. Old is 0, new is 1"));
				MetaData->SetValue(NewProp_launchSpeed, TEXT("Category"), TEXT("entity_launcher"));
				MetaData->SetValue(NewProp_launchSpeed, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(NewProp_launchSpeed, TEXT("ToolTip"), TEXT("In world units/second"));
				MetaData->SetValue(NewProp_launchTargetName, TEXT("Category"), TEXT("entity_launcher"));
				MetaData->SetValue(NewProp_launchTargetName, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(NewProp_launchTargetName, TEXT("ToolTip"), TEXT("If specified, the launch will always point towards this info_target instead of using launchDirection"));
				MetaData->SetValue(NewProp_bMakeLaunchDirectionUnit, TEXT("Category"), TEXT("entity_launcher"));
				MetaData->SetValue(NewProp_bMakeLaunchDirectionUnit, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(NewProp_bMakeLaunchDirectionUnit, TEXT("ToolTip"), TEXT("Whether or not to force the launch direction to be unit"));
				MetaData->SetValue(NewProp_launchDirection, TEXT("Category"), TEXT("entity_launcher"));
				MetaData->SetValue(NewProp_launchDirection, TEXT("ModuleRelativePath"), TEXT("entity_launcher.h"));
				MetaData->SetValue(NewProp_launchDirection, TEXT("ToolTip"), TEXT("Direction to launch the ball in. Also acts as scalar for the launch velocity"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Aentity_launcher(Z_Construct_UClass_Aentity_launcher, &Aentity_launcher::StaticClass, TEXT("Aentity_launcher"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Aentity_launcher);
	UFunction* Z_Construct_UFunction_Aprop_move_base_Close()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Close"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_FindMoveBaseByName()
	{
		struct prop_move_base_eventFindMoveBaseByName_Parms
		{
			FName targetName;
			const UObject* WorldContextObject;
			Aprop_move_base* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindMoveBaseByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(prop_move_base_eventFindMoveBaseByName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, prop_move_base_eventFindMoveBaseByName_Parms), 0x0010000000000580, Z_Construct_UClass_Aprop_move_base_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, prop_move_base_eventFindMoveBaseByName_Parms), 0x0010000000000082, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_targetName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("targetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(targetName, prop_move_base_eventFindMoveBaseByName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Finder function"));
			MetaData->SetValue(NewProp_WorldContextObject, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_GetEstimatedTravelTime()
	{
		struct prop_move_base_eventGetEstimatedTravelTime_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetEstimatedTravelTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020400, 65535, sizeof(prop_move_base_eventGetEstimatedTravelTime_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, prop_move_base_eventGetEstimatedTravelTime_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Accessor for movement time"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_GetPosition()
	{
		struct prop_move_base_eventGetPosition_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020400, 65535, sizeof(prop_move_base_eventGetPosition_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, prop_move_base_eventGetPosition_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the current value of currentLerp"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_IsClosed()
	{
		struct prop_move_base_eventIsClosed_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsClosed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_move_base_eventIsClosed_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, prop_move_base_eventIsClosed_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, prop_move_base_eventIsClosed_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, prop_move_base_eventIsClosed_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_IsClosing()
	{
		struct prop_move_base_eventIsClosing_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsClosing"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020400, 65535, sizeof(prop_move_base_eventIsClosing_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, prop_move_base_eventIsClosing_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, prop_move_base_eventIsClosing_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, prop_move_base_eventIsClosing_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_IsMoving()
	{
		struct prop_move_base_eventIsMoving_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsMoving"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020400, 65535, sizeof(prop_move_base_eventIsMoving_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, prop_move_base_eventIsMoving_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, prop_move_base_eventIsMoving_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, prop_move_base_eventIsMoving_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_IsOpen()
	{
		struct prop_move_base_eventIsOpen_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsOpen"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_move_base_eventIsOpen_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, prop_move_base_eventIsOpen_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, prop_move_base_eventIsOpen_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, prop_move_base_eventIsOpen_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Accessor functions for booleans"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_IsOpening()
	{
		struct prop_move_base_eventIsOpening_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsOpening"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020400, 65535, sizeof(prop_move_base_eventIsOpening_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, prop_move_base_eventIsOpening_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, prop_move_base_eventIsOpening_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, prop_move_base_eventIsOpening_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_OnChangePosition()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChangePosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(prop_move_base_eventOnChangePosition_Parms));
			UProperty* NewProp_deltaLerp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("deltaLerp"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(deltaLerp, prop_move_base_eventOnChangePosition_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("For debugging"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_OnClosed()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnClosed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_OnFullyClosed()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnFullyClosed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_OnFullyOpened()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnFullyOpened"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_OnOpened()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnOpened"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Blueprint implementable events"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_OnUseLocked()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnUseLocked"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called when the door attempts to open or close, but the door is locked"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_Open()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Open"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("public open and close togglers"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_Pause()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Pause"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Stops the door's current movement"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_SetPosition()
	{
		struct prop_move_base_eventSetPosition_Parms
		{
			float lerp;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_move_base_eventSetPosition_Parms));
			UProperty* NewProp_lerp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("lerp"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(lerp, prop_move_base_eventSetPosition_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given a 0-1 lerp value, teleports the door between the starting location and the ending location"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_SetSpeed()
	{
		struct prop_move_base_eventSetSpeed_Parms
		{
			float newSpeed;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_move_base_eventSetSpeed_Parms));
			UProperty* NewProp_newSpeed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(newSpeed, prop_move_base_eventSetSpeed_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets the value of movementSpeed and then recalculates the lerp speed based on the deltaLocation length"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_Toggle()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Toggle"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_move_base_Use()
	{
		struct prop_move_base_eventUse_Parms
		{
			AActor* caller;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_move_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Use"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_move_base_eventUse_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, prop_move_base_eventUse_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, prop_move_base_eventUse_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, prop_move_base_eventUse_Parms), sizeof(bool), true);
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, prop_move_base_eventUse_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Override for entity_base use - calls for toggling the door"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Aprop_move_base_NoRegister()
	{
		return Aprop_move_base::StaticClass();
	}
	UClass* Z_Construct_UClass_Aprop_move_base()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_Aentity_base();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Aprop_move_base::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_Close());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_FindMoveBaseByName());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_GetEstimatedTravelTime());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_GetPosition());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_IsClosed());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_IsClosing());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_IsMoving());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_IsOpen());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_IsOpening());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_OnChangePosition());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_OnClosed());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_OnFullyClosed());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_OnFullyOpened());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_OnOpened());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_OnUseLocked());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_Open());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_Pause());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_SetPosition());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_SetSpeed());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_Toggle());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_move_base_Use());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_audioComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("audioComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(audioComponent, Aprop_move_base), 0x001000000008000d, Z_Construct_UClass_UAudioComponent_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPlaySoundOnOpen, Aprop_move_base, bool);
				UProperty* NewProp_bPlaySoundOnOpen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPlaySoundOnOpen"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPlaySoundOnOpen, Aprop_move_base), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bPlaySoundOnOpen, Aprop_move_base), sizeof(bool), true);
				UProperty* NewProp_openSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("openSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(openSound, Aprop_move_base), 0x0010000000000005, Z_Construct_UClass_USoundCue_NoRegister());
				UProperty* NewProp_delayBeforeReset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("delayBeforeReset"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(delayBeforeReset, Aprop_move_base), 0x0010000000000005);
				UProperty* NewProp_movementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("movementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(movementSpeed, Aprop_move_base), 0x0010000000000015);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsLocked, Aprop_move_base, bool);
				UProperty* NewProp_bIsLocked = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsLocked"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsLocked, Aprop_move_base), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bIsLocked, Aprop_move_base), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_Close(), "Close"); // 2947266904
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_FindMoveBaseByName(), "FindMoveBaseByName"); // 2519548413
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_GetEstimatedTravelTime(), "GetEstimatedTravelTime"); // 1033403312
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_GetPosition(), "GetPosition"); // 1368212732
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_IsClosed(), "IsClosed"); // 2756519875
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_IsClosing(), "IsClosing"); // 779805281
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_IsMoving(), "IsMoving"); // 4083814118
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_IsOpen(), "IsOpen"); // 3945933105
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_IsOpening(), "IsOpening"); // 123366381
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_OnChangePosition(), "OnChangePosition"); // 4239885017
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_OnClosed(), "OnClosed"); // 1096895207
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_OnFullyClosed(), "OnFullyClosed"); // 3811498967
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_OnFullyOpened(), "OnFullyOpened"); // 2700776900
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_OnOpened(), "OnOpened"); // 2162757354
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_OnUseLocked(), "OnUseLocked"); // 1004160425
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_Open(), "Open"); // 2803308402
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_Pause(), "Pause"); // 2288848417
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_SetPosition(), "SetPosition"); // 4079918239
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_SetSpeed(), "SetSpeed"); // 2272760046
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_Toggle(), "Toggle"); // 2711509171
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_move_base_Use(), "Use"); // 964935260
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("prop_move_base.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
				MetaData->SetValue(NewProp_audioComponent, TEXT("Category"), TEXT("prop_move_base"));
				MetaData->SetValue(NewProp_audioComponent, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_audioComponent, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
				MetaData->SetValue(NewProp_audioComponent, TEXT("ToolTip"), TEXT("Sound emitter which becomes attached to this entity"));
				MetaData->SetValue(NewProp_bPlaySoundOnOpen, TEXT("Category"), TEXT("prop_move_base"));
				MetaData->SetValue(NewProp_bPlaySoundOnOpen, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
				MetaData->SetValue(NewProp_openSound, TEXT("Category"), TEXT("prop_move_base"));
				MetaData->SetValue(NewProp_openSound, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
				MetaData->SetValue(NewProp_openSound, TEXT("ToolTip"), TEXT("Sound system"));
				MetaData->SetValue(NewProp_delayBeforeReset, TEXT("Category"), TEXT("prop_move_base"));
				MetaData->SetValue(NewProp_delayBeforeReset, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
				MetaData->SetValue(NewProp_movementSpeed, TEXT("Category"), TEXT("prop_move_base"));
				MetaData->SetValue(NewProp_movementSpeed, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
				MetaData->SetValue(NewProp_bIsLocked, TEXT("Category"), TEXT("prop_move_base"));
				MetaData->SetValue(NewProp_bIsLocked, TEXT("ModuleRelativePath"), TEXT("prop_move_base.h"));
				MetaData->SetValue(NewProp_bIsLocked, TEXT("ToolTip"), TEXT("boolean for locked/unlocked state"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Aprop_move_base(Z_Construct_UClass_Aprop_move_base, &Aprop_move_base::StaticClass, TEXT("Aprop_move_base"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Aprop_move_base);
	UFunction* Z_Construct_UFunction_Aprop_movelinear_GetEstimatedTravelTime()
	{
		struct prop_movelinear_eventGetEstimatedTravelTime_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_movelinear();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetEstimatedTravelTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(prop_movelinear_eventGetEstimatedTravelTime_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, prop_movelinear_eventGetEstimatedTravelTime_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_movelinear"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_movelinear.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Accessor for the estimated time of travel if moving in linear motion"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_movelinear_IsClosed()
	{
		struct prop_movelinear_eventIsClosed_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_movelinear();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsClosed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(prop_movelinear_eventIsClosed_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, prop_movelinear_eventIsClosed_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, prop_movelinear_eventIsClosed_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, prop_movelinear_eventIsClosed_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_movelinear"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_movelinear.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_movelinear_IsOpen()
	{
		struct prop_movelinear_eventIsOpen_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_movelinear();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsOpen"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(prop_movelinear_eventIsOpen_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, prop_movelinear_eventIsOpen_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, prop_movelinear_eventIsOpen_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, prop_movelinear_eventIsOpen_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_movelinear"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_movelinear.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Accessor functions for booleans"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_movelinear_SetPosition()
	{
		struct prop_movelinear_eventSetPosition_Parms
		{
			float lerp;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_movelinear();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_movelinear_eventSetPosition_Parms));
			UProperty* NewProp_lerp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("lerp"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(lerp, prop_movelinear_eventSetPosition_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_movelinear"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_movelinear.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given a 0-1 lerp value, teleports the door between the starting location and the ending location"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_movelinear_SetQuarterPeriod()
	{
		struct prop_movelinear_eventSetQuarterPeriod_Parms
		{
			float newPeriod;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_movelinear();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetQuarterPeriod"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(prop_movelinear_eventSetQuarterPeriod_Parms));
			UProperty* NewProp_newPeriod = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newPeriod"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(newPeriod, prop_movelinear_eventSetQuarterPeriod_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_movelinear_sinusoidal"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_movelinear.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets the half-period and recalculates the angular speed from that"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_movelinear_SetSpeed()
	{
		struct prop_movelinear_eventSetSpeed_Parms
		{
			float newSpeed;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_movelinear();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_movelinear_eventSetSpeed_Parms));
			UProperty* NewProp_newSpeed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(newSpeed, prop_movelinear_eventSetSpeed_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_movelinear.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets the value of movementSpeed and then recalculates the lerp speed based on the deltaLocation length"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_movelinear_Use()
	{
		struct prop_movelinear_eventUse_Parms
		{
			AActor* caller;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_movelinear();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Use"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_movelinear_eventUse_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, prop_movelinear_eventUse_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, prop_movelinear_eventUse_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, prop_movelinear_eventUse_Parms), sizeof(bool), true);
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, prop_movelinear_eventUse_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_movelinear"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_movelinear.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Override for entity_base use - calls for toggling the door"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Aprop_movelinear_NoRegister()
	{
		return Aprop_movelinear::StaticClass();
	}
	UClass* Z_Construct_UClass_Aprop_movelinear()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_Aprop_move_base();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Aprop_movelinear::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_movelinear_GetEstimatedTravelTime());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_movelinear_IsClosed());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_movelinear_IsOpen());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_movelinear_SetPosition());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_movelinear_SetQuarterPeriod());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_movelinear_SetSpeed());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_movelinear_Use());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_sinusoidalQuarterPeriod = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("sinusoidalQuarterPeriod"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(sinusoidalQuarterPeriod, Aprop_movelinear), 0x0010000000000015);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMoveAsSinusoidalWave, Aprop_movelinear, bool);
				UProperty* NewProp_bMoveAsSinusoidalWave = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bMoveAsSinusoidalWave"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMoveAsSinusoidalWave, Aprop_movelinear), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bMoveAsSinusoidalWave, Aprop_movelinear), sizeof(bool), true);
				UProperty* NewProp_InitialDeltaLocation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InitialDeltaLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(InitialDeltaLocation, Aprop_movelinear), 0x0010000000000015, Z_Construct_UScriptStruct_FVector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_movelinear_GetEstimatedTravelTime(), "GetEstimatedTravelTime"); // 815813609
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_movelinear_IsClosed(), "IsClosed"); // 2055743016
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_movelinear_IsOpen(), "IsOpen"); // 1264352748
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_movelinear_SetPosition(), "SetPosition"); // 105577727
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_movelinear_SetQuarterPeriod(), "SetQuarterPeriod"); // 1219161321
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_movelinear_SetSpeed(), "SetSpeed"); // 346388491
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_movelinear_Use(), "Use"); // 1320191935
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("prop_movelinear.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("prop_movelinear.h"));
				MetaData->SetValue(NewProp_sinusoidalQuarterPeriod, TEXT("Category"), TEXT("prop_movelinear_sinusoidal"));
				MetaData->SetValue(NewProp_sinusoidalQuarterPeriod, TEXT("ModuleRelativePath"), TEXT("prop_movelinear.h"));
				MetaData->SetValue(NewProp_sinusoidalQuarterPeriod, TEXT("ToolTip"), TEXT("Amount of time to open/close in sinusoidal motion"));
				MetaData->SetValue(NewProp_bMoveAsSinusoidalWave, TEXT("Category"), TEXT("prop_movelinear_sinusoidal"));
				MetaData->SetValue(NewProp_bMoveAsSinusoidalWave, TEXT("ModuleRelativePath"), TEXT("prop_movelinear.h"));
				MetaData->SetValue(NewProp_bMoveAsSinusoidalWave, TEXT("ToolTip"), TEXT("Functions and variables for sinusoidal functions\nThese are used in processOpen and processClose to calculate the change in lerp differently"));
				MetaData->SetValue(NewProp_InitialDeltaLocation, TEXT("Category"), TEXT("prop_movelinear"));
				MetaData->SetValue(NewProp_InitialDeltaLocation, TEXT("ModuleRelativePath"), TEXT("prop_movelinear.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Aprop_movelinear(Z_Construct_UClass_Aprop_movelinear, &Aprop_movelinear::StaticClass, TEXT("Aprop_movelinear"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Aprop_movelinear);
	UFunction* Z_Construct_UFunction_Aprop_worldbutton_OnPressed()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_worldbutton();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPressed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_worldbutton"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_worldbutton.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_worldbutton_Press()
	{
		UObject* Outer=Z_Construct_UClass_Aprop_worldbutton();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Press"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_worldbutton"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_worldbutton.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Presses the button if it is available to be pressed"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Aprop_worldbutton_NoRegister()
	{
		return Aprop_worldbutton::StaticClass();
	}
	UClass* Z_Construct_UClass_Aprop_worldbutton()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_Aprop_movelinear();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Aprop_worldbutton::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_worldbutton_OnPressed());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_worldbutton_Press());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDontMoveOnPress, Aprop_worldbutton, bool);
				UProperty* NewProp_bDontMoveOnPress = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDontMoveOnPress"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDontMoveOnPress, Aprop_worldbutton), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bDontMoveOnPress, Aprop_worldbutton), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_worldbutton_OnPressed(), "OnPressed"); // 3700761256
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_worldbutton_Press(), "Press"); // 3460487874
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("prop_worldbutton.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("prop_worldbutton.h"));
				MetaData->SetValue(NewProp_bDontMoveOnPress, TEXT("Category"), TEXT("prop_worldbutton"));
				MetaData->SetValue(NewProp_bDontMoveOnPress, TEXT("ModuleRelativePath"), TEXT("prop_worldbutton.h"));
				MetaData->SetValue(NewProp_bDontMoveOnPress, TEXT("ToolTip"), TEXT("Whether or to move the button when pressed"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Aprop_worldbutton(Z_Construct_UClass_Aprop_worldbutton, &Aprop_worldbutton::StaticClass, TEXT("Aprop_worldbutton"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Aprop_worldbutton);
	UFunction* Z_Construct_UFunction_Aprop_rotator_IsClosed()
	{
		struct prop_rotator_eventIsClosed_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_rotator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsClosed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(prop_rotator_eventIsClosed_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, prop_rotator_eventIsClosed_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, prop_rotator_eventIsClosed_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, prop_rotator_eventIsClosed_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_rotator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_rotator_IsOpen()
	{
		struct prop_rotator_eventIsOpen_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_rotator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsOpen"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(prop_rotator_eventIsOpen_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, prop_rotator_eventIsOpen_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, prop_rotator_eventIsOpen_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, prop_rotator_eventIsOpen_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_rotator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Accessor functions for booleans"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_rotator_SetPeriod()
	{
		struct prop_rotator_eventSetPeriod_Parms
		{
			float newPeriod;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_rotator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPeriod"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_rotator_eventSetPeriod_Parms));
			UProperty* NewProp_newPeriod = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newPeriod"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(newPeriod, prop_rotator_eventSetPeriod_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_rotator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given a period, calculates the the angular speed and then calls SetSpeed(...)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_rotator_SetPosition()
	{
		struct prop_rotator_eventSetPosition_Parms
		{
			float lerp;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_rotator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_rotator_eventSetPosition_Parms));
			UProperty* NewProp_lerp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("lerp"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(lerp, prop_rotator_eventSetPosition_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_rotator"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_rotator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given a 0-1 lerp value, rotates the door between the starting location and the ending location"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_rotator_SetSpeed()
	{
		struct prop_rotator_eventSetSpeed_Parms
		{
			float newSpeed;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_rotator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_rotator_eventSetSpeed_Parms));
			UProperty* NewProp_newSpeed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(newSpeed, prop_rotator_eventSetSpeed_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_move_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_rotator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets a new angular speed as movementSpeed"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Aprop_rotator_NoRegister()
	{
		return Aprop_rotator::StaticClass();
	}
	UClass* Z_Construct_UClass_Aprop_rotator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_Aprop_move_base();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Aprop_rotator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_rotator_IsClosed());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_rotator_IsOpen());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_rotator_SetPeriod());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_rotator_SetPosition());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_rotator_SetSpeed());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_InitialDeltaRotation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InitialDeltaRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(InitialDeltaRotation, Aprop_rotator), 0x0010000000000015, Z_Construct_UScriptStruct_FRotator());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStartOn, Aprop_rotator, bool);
				UProperty* NewProp_bStartOn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bStartOn"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStartOn, Aprop_rotator), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bStartOn, Aprop_rotator), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRotateForever, Aprop_rotator, bool);
				UProperty* NewProp_bRotateForever = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bRotateForever"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRotateForever, Aprop_rotator), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bRotateForever, Aprop_rotator), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_rotator_IsClosed(), "IsClosed"); // 1237801206
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_rotator_IsOpen(), "IsOpen"); // 864657791
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_rotator_SetPeriod(), "SetPeriod"); // 1384740508
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_rotator_SetPosition(), "SetPosition"); // 1938783032
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_rotator_SetSpeed(), "SetSpeed"); // 4075062543
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("prop_rotator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("prop_rotator.h"));
				MetaData->SetValue(NewProp_InitialDeltaRotation, TEXT("Category"), TEXT("prop_rotator"));
				MetaData->SetValue(NewProp_InitialDeltaRotation, TEXT("ModuleRelativePath"), TEXT("prop_rotator.h"));
				MetaData->SetValue(NewProp_InitialDeltaRotation, TEXT("ToolTip"), TEXT("we'll have private and public copies of this so that we can keep the vector fixed"));
				MetaData->SetValue(NewProp_bStartOn, TEXT("Category"), TEXT("prop_rotator"));
				MetaData->SetValue(NewProp_bStartOn, TEXT("ModuleRelativePath"), TEXT("prop_rotator.h"));
				MetaData->SetValue(NewProp_bStartOn, TEXT("ToolTip"), TEXT("Whether or not to start rotating OnBeginPlay()"));
				MetaData->SetValue(NewProp_bRotateForever, TEXT("Category"), TEXT("prop_rotator"));
				MetaData->SetValue(NewProp_bRotateForever, TEXT("ModuleRelativePath"), TEXT("prop_rotator.h"));
				MetaData->SetValue(NewProp_bRotateForever, TEXT("ToolTip"), TEXT("Whether or not to rotate forever"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Aprop_rotator(Z_Construct_UClass_Aprop_rotator, &Aprop_rotator::StaticClass, TEXT("Aprop_rotator"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Aprop_rotator);
	UFunction* Z_Construct_UFunction_Aprop_rotator_pivoted_GetTarget()
	{
		struct prop_rotator_pivoted_eventGetTarget_Parms
		{
			Ainfo_target* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_rotator_pivoted();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTarget"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(prop_rotator_pivoted_eventGetTarget_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, prop_rotator_pivoted_eventGetTarget_Parms), 0x0010000000000580, Z_Construct_UClass_Ainfo_target_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_rotator_pivoted"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_rotator_pivoted.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns refernce to target"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_rotator_pivoted_SetPosition()
	{
		struct prop_rotator_pivoted_eventSetPosition_Parms
		{
			float lerp;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_rotator_pivoted();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(prop_rotator_pivoted_eventSetPosition_Parms));
			UProperty* NewProp_lerp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("lerp"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(lerp, prop_rotator_pivoted_eventSetPosition_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_rotator_pivoted"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_rotator_pivoted.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Rotates the rotator around the pivot point, to the given lerp value"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_rotator_pivoted_SetTarget()
	{
		struct prop_rotator_pivoted_eventSetTarget_Parms
		{
			Ainfo_target* newTarget;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_rotator_pivoted();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetTarget"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(prop_rotator_pivoted_eventSetTarget_Parms));
			UProperty* NewProp_newTarget = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newTarget"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newTarget, prop_rotator_pivoted_eventSetTarget_Parms), 0x0010000000000080, Z_Construct_UClass_Ainfo_target_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_rotator_pivoted"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_rotator_pivoted.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Experimental - sets the target to rotate around"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aprop_rotator_pivoted_SetTargetByName()
	{
		struct prop_rotator_pivoted_eventSetTargetByName_Parms
		{
			FName newTargetName;
		};
		UObject* Outer=Z_Construct_UClass_Aprop_rotator_pivoted();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetTargetByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(prop_rotator_pivoted_eventSetTargetByName_Parms));
			UProperty* NewProp_newTargetName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newTargetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(newTargetName, prop_rotator_pivoted_eventSetTargetByName_Parms), 0x0010000000000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("prop_rotator_pivoted"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("prop_rotator_pivoted.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Experimental - sets the target to rotate around"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Aprop_rotator_pivoted_NoRegister()
	{
		return Aprop_rotator_pivoted::StaticClass();
	}
	UClass* Z_Construct_UClass_Aprop_rotator_pivoted()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_Aprop_rotator();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Aprop_rotator_pivoted::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_rotator_pivoted_GetTarget());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_rotator_pivoted_SetPosition());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_rotator_pivoted_SetTarget());
				OuterClass->LinkChild(Z_Construct_UFunction_Aprop_rotator_pivoted_SetTargetByName());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bApplyTargetPosition, Aprop_rotator_pivoted, bool);
				UProperty* NewProp_bApplyTargetPosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bApplyTargetPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bApplyTargetPosition, Aprop_rotator_pivoted), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bApplyTargetPosition, Aprop_rotator_pivoted), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bApplyTargetRotation, Aprop_rotator_pivoted, bool);
				UProperty* NewProp_bApplyTargetRotation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bApplyTargetRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bApplyTargetRotation, Aprop_rotator_pivoted), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bApplyTargetRotation, Aprop_rotator_pivoted), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bParentToTarget, Aprop_rotator_pivoted, bool);
				UProperty* NewProp_bParentToTarget = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bParentToTarget"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bParentToTarget, Aprop_rotator_pivoted), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bParentToTarget, Aprop_rotator_pivoted), sizeof(bool), true);
				UProperty* NewProp_targetName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("targetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(targetName, Aprop_rotator_pivoted), 0x0010000000000015);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_rotator_pivoted_GetTarget(), "GetTarget"); // 3800694178
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_rotator_pivoted_SetPosition(), "SetPosition"); // 1837943247
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_rotator_pivoted_SetTarget(), "SetTarget"); // 2858008934
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aprop_rotator_pivoted_SetTargetByName(), "SetTargetByName"); // 2029415094
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("prop_rotator_pivoted.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("prop_rotator_pivoted.h"));
				MetaData->SetValue(NewProp_bApplyTargetPosition, TEXT("Category"), TEXT("prop_rotator_pivoted"));
				MetaData->SetValue(NewProp_bApplyTargetPosition, TEXT("ModuleRelativePath"), TEXT("prop_rotator_pivoted.h"));
				MetaData->SetValue(NewProp_bApplyTargetPosition, TEXT("ToolTip"), TEXT("Whether or not to enforce constant distance to target\nDoes nothing if bParentToTarget is true"));
				MetaData->SetValue(NewProp_bApplyTargetRotation, TEXT("Category"), TEXT("prop_rotator_pivoted"));
				MetaData->SetValue(NewProp_bApplyTargetRotation, TEXT("ModuleRelativePath"), TEXT("prop_rotator_pivoted.h"));
				MetaData->SetValue(NewProp_bApplyTargetRotation, TEXT("ToolTip"), TEXT("Whether or not to apply the rotation of the pivot to the rotator. Can\n       cause teleporting. Does nothing if bParentToTarget is true."));
				MetaData->SetValue(NewProp_bParentToTarget, TEXT("Category"), TEXT("prop_rotator_pivoted"));
				MetaData->SetValue(NewProp_bParentToTarget, TEXT("ModuleRelativePath"), TEXT("prop_rotator_pivoted.h"));
				MetaData->SetValue(NewProp_bParentToTarget, TEXT("ToolTip"), TEXT("Whether or not to auto-parent to target."));
				MetaData->SetValue(NewProp_targetName, TEXT("Category"), TEXT("prop_rotator_pivoted"));
				MetaData->SetValue(NewProp_targetName, TEXT("ModuleRelativePath"), TEXT("prop_rotator_pivoted.h"));
				MetaData->SetValue(NewProp_targetName, TEXT("ToolTip"), TEXT("Name of info_target to pivot around"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Aprop_rotator_pivoted(Z_Construct_UClass_Aprop_rotator_pivoted, &Aprop_rotator_pivoted::StaticClass, TEXT("Aprop_rotator_pivoted"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Aprop_rotator_pivoted);
	UFunction* Z_Construct_UFunction_Aworldui_base_Activate()
	{
		struct worldui_base_eventActivate_Parms
		{
			AActor* caller;
		};
		UObject* Outer=Z_Construct_UClass_Aworldui_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Activate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(worldui_base_eventActivate_Parms));
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, worldui_base_eventActivate_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("worldui_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called to activate the main-purpose function of the worldui_base, ex. quit the game, call something else"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_base_Focus()
	{
		struct worldui_base_eventFocus_Parms
		{
			AActor* caller;
		};
		UObject* Outer=Z_Construct_UClass_Aworldui_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Focus"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(worldui_base_eventFocus_Parms));
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, worldui_base_eventFocus_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("worldui_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Highlights this worldui_base in some way, to make the user notice it or 'select' it"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_base_Look()
	{
		struct worldui_base_eventLook_Parms
		{
			AActor* caller;
		};
		UObject* Outer=Z_Construct_UClass_Aworldui_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Look"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(worldui_base_eventLook_Parms));
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, worldui_base_eventLook_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("worldui_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("The headset's BP class will implement the tracing and calling of this\nActivated when the player looks at this worldui_base"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_base_OnActivate()
	{
		UObject* Outer=Z_Construct_UClass_Aworldui_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnActivate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(worldui_base_eventOnActivate_Parms));
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, worldui_base_eventOnActivate_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("worldui_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Blueprint-extensible event called at the end of Activate()"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_base_OnFocus()
	{
		UObject* Outer=Z_Construct_UClass_Aworldui_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnFocus"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(worldui_base_eventOnFocus_Parms));
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, worldui_base_eventOnFocus_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("worldui_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Blueprint-extensible event called at the end of Focus()"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_base_OnLook()
	{
		UObject* Outer=Z_Construct_UClass_Aworldui_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnLook"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(worldui_base_eventOnLook_Parms));
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, worldui_base_eventOnLook_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("worldui_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Blueprint-extensible event called at the end of Look()"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_base_Use()
	{
		struct worldui_base_eventUse_Parms
		{
			AActor* caller;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Aworldui_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Use"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(worldui_base_eventUse_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, worldui_base_eventUse_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, worldui_base_eventUse_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, worldui_base_eventUse_Parms), sizeof(bool), true);
			UProperty* NewProp_caller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("caller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(caller, worldui_base_eventUse_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("worldui_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Override for the entity_base parent function"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Aworldui_base_NoRegister()
	{
		return Aworldui_base::StaticClass();
	}
	UClass* Z_Construct_UClass_Aworldui_base()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_Aentity_base();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Aworldui_base::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_base_Activate());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_base_Focus());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_base_Look());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_base_OnActivate());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_base_OnFocus());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_base_OnLook());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_base_Use());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseOnActivate, Aworldui_base, bool);
				UProperty* NewProp_bUseOnActivate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseOnActivate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseOnActivate, Aworldui_base), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bUseOnActivate, Aworldui_base), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bActivateOnUse, Aworldui_base, bool);
				UProperty* NewProp_bActivateOnUse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bActivateOnUse"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bActivateOnUse, Aworldui_base), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bActivateOnUse, Aworldui_base), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseOnLook, Aworldui_base, bool);
				UProperty* NewProp_bUseOnLook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUseOnLook"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseOnLook, Aworldui_base), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bUseOnLook, Aworldui_base), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bActivateOnLook, Aworldui_base, bool);
				UProperty* NewProp_bActivateOnLook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bActivateOnLook"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bActivateOnLook, Aworldui_base), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bActivateOnLook, Aworldui_base), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFocusOnLook, Aworldui_base, bool);
				UProperty* NewProp_bFocusOnLook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bFocusOnLook"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFocusOnLook, Aworldui_base), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bFocusOnLook, Aworldui_base), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_base_Activate(), "Activate"); // 1696294716
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_base_Focus(), "Focus"); // 2333751129
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_base_Look(), "Look"); // 3987229140
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_base_OnActivate(), "OnActivate"); // 99012357
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_base_OnFocus(), "OnFocus"); // 2130631861
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_base_OnLook(), "OnLook"); // 1770762662
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_base_Use(), "Use"); // 3170178041
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("worldui_base.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
				MetaData->SetValue(NewProp_bUseOnActivate, TEXT("Category"), TEXT("worldui_base"));
				MetaData->SetValue(NewProp_bUseOnActivate, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
				MetaData->SetValue(NewProp_bActivateOnUse, TEXT("Category"), TEXT("worldui_base"));
				MetaData->SetValue(NewProp_bActivateOnUse, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
				MetaData->SetValue(NewProp_bUseOnLook, TEXT("Category"), TEXT("worldui_base"));
				MetaData->SetValue(NewProp_bUseOnLook, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
				MetaData->SetValue(NewProp_bActivateOnLook, TEXT("Category"), TEXT("worldui_base"));
				MetaData->SetValue(NewProp_bActivateOnLook, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
				MetaData->SetValue(NewProp_bFocusOnLook, TEXT("Category"), TEXT("worldui_base"));
				MetaData->SetValue(NewProp_bFocusOnLook, TEXT("ModuleRelativePath"), TEXT("worldui_base.h"));
				MetaData->SetValue(NewProp_bFocusOnLook, TEXT("ToolTip"), TEXT("Booleans for the different functions interacting with each other"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Aworldui_base(Z_Construct_UClass_Aworldui_base, &Aworldui_base::StaticClass, TEXT("Aworldui_base"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Aworldui_base);
	UClass* Z_Construct_UClass_Aworldui_sprite_NoRegister()
	{
		return Aworldui_sprite::StaticClass();
	}
	UClass* Z_Construct_UClass_Aworldui_sprite()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_Aworldui_base();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Aworldui_sprite::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_sprite = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("sprite"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(sprite, Aworldui_sprite), 0x001000000008001d, Z_Construct_UClass_UBillboardComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("worldui_sprite.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("worldui_sprite.h"));
				MetaData->SetValue(NewProp_sprite, TEXT("Category"), TEXT("worldui_sprite"));
				MetaData->SetValue(NewProp_sprite, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_sprite, TEXT("ModuleRelativePath"), TEXT("worldui_sprite.h"));
				MetaData->SetValue(NewProp_sprite, TEXT("ToolTip"), TEXT("Rendered billboard component"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Aworldui_sprite(Z_Construct_UClass_Aworldui_sprite, &Aworldui_sprite::StaticClass, TEXT("Aworldui_sprite"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Aworldui_sprite);
	UEnum* Z_Construct_UEnum_MMC_Bowling_FilterMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_MMC_Bowling();
		extern uint32 Get_Z_Construct_UEnum_MMC_Bowling_FilterMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("FilterMode"), 0, Get_Z_Construct_UEnum_MMC_Bowling_FilterMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilterMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Normal")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Inverted")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Random")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FilterMode_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("FilterMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Inverted.DisplayName"), TEXT("Inverted"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Normal.DisplayName"), TEXT("Normal"));
			MetaData->SetValue(ReturnEnum, TEXT("Random.DisplayName"), TEXT("Random"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_MMC_Bowling_FilterMode_CRC() { return 449321380U; }
	UEnum* Z_Construct_UEnum_MMC_Bowling_FilterType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_MMC_Bowling();
		extern uint32 Get_Z_Construct_UEnum_MMC_Bowling_FilterType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("FilterType"), 0, Get_Z_Construct_UEnum_MMC_Bowling_FilterType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilterType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ByClass")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ByName")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ByTag")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ByIsVisible")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ByIsSolid")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ByIsPhysicsSimulated")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("FilterType_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("FilterType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ByClass.DisplayName"), TEXT("ByClass"));
			MetaData->SetValue(ReturnEnum, TEXT("ByIsPhysicsSimulated.DisplayName"), TEXT("ByIsPhysicsSimulated"));
			MetaData->SetValue(ReturnEnum, TEXT("ByIsSolid.DisplayName"), TEXT("ByIsSolid"));
			MetaData->SetValue(ReturnEnum, TEXT("ByIsVisible.DisplayName"), TEXT("ByIsVisible"));
			MetaData->SetValue(ReturnEnum, TEXT("ByName.DisplayName"), TEXT("ByName"));
			MetaData->SetValue(ReturnEnum, TEXT("ByTag.DisplayName"), TEXT("ByTag"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_MMC_Bowling_FilterType_CRC() { return 2306809868U; }
	UFunction* Z_Construct_UFunction_Afilter_base_FilterActor()
	{
		struct filter_base_eventFilterActor_Parms
		{
			const AActor* filterMe;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Afilter_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilterActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(filter_base_eventFilterActor_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, filter_base_eventFilterActor_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, filter_base_eventFilterActor_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, filter_base_eventFilterActor_Parms), sizeof(bool), true);
			UProperty* NewProp_filterMe = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(filterMe, filter_base_eventFilterActor_Parms), 0x0010000000000082, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("filter_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Checks if an actor would pass this filter"));
			MetaData->SetValue(NewProp_filterMe, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Afilter_base_FilterActorArray()
	{
		struct filter_base_eventFilterActorArray_Parms
		{
			TArray<AActor*> filterMe;
			TArray<AActor*> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Afilter_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilterActorArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(filter_base_eventFilterActorArray_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, filter_base_eventFilterActorArray_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_filterMe = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(filterMe, filter_base_eventFilterActorArray_Parms), 0x0010000008000182);
			UProperty* NewProp_filterMe_Inner = new(EC_InternalUseOnlyConstructor, NewProp_filterMe, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("filter_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("MEMBER FUNCTIONS\n//Filters an array through this filter"));
			MetaData->SetValue(NewProp_filterMe, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Afilter_base_FilterActorArrayByFilterName()
	{
		struct filter_base_eventFilterActorArrayByFilterName_Parms
		{
			TArray<AActor*> filterMe;
			FName filterName;
			TArray<AActor*> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Afilter_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilterActorArrayByFilterName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(filter_base_eventFilterActorArrayByFilterName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, filter_base_eventFilterActorArrayByFilterName_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_filterName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(filterName, filter_base_eventFilterActorArrayByFilterName_Parms), 0x0010000000000082);
			UProperty* NewProp_filterMe = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(filterMe, filter_base_eventFilterActorArrayByFilterName_Parms), 0x0010000008000182);
			UProperty* NewProp_filterMe_Inner = new(EC_InternalUseOnlyConstructor, NewProp_filterMe, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("filter_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("STATIC FUNCTIONS\n//Given an array of actors and the name of a filter, returns the filtered array of actors"));
			MetaData->SetValue(NewProp_filterName, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_filterMe, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Afilter_base_FilterActorArrayRandomly()
	{
		struct filter_base_eventFilterActorArrayRandomly_Parms
		{
			TArray<AActor*> filterMe;
			TArray<AActor*> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Afilter_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilterActorArrayRandomly"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54420401, 65535, sizeof(filter_base_eventFilterActorArrayRandomly_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, filter_base_eventFilterActorArrayRandomly_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_filterMe = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(filterMe, filter_base_eventFilterActorArrayRandomly_Parms), 0x0010000008000182);
			UProperty* NewProp_filterMe_Inner = new(EC_InternalUseOnlyConstructor, NewProp_filterMe, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("filter_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Randomly filters an array through this filter"));
			MetaData->SetValue(NewProp_filterMe, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Afilter_base_FilterActorArrayRandomlyByFilterName()
	{
		struct filter_base_eventFilterActorArrayRandomlyByFilterName_Parms
		{
			TArray<AActor*> filterMe;
			FName filterName;
			TArray<AActor*> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Afilter_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilterActorArrayRandomlyByFilterName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(filter_base_eventFilterActorArrayRandomlyByFilterName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, filter_base_eventFilterActorArrayRandomlyByFilterName_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_filterName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(filterName, filter_base_eventFilterActorArrayRandomlyByFilterName_Parms), 0x0010000000000082);
			UProperty* NewProp_filterMe = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(filterMe, filter_base_eventFilterActorArrayRandomlyByFilterName_Parms), 0x0010000008000182);
			UProperty* NewProp_filterMe_Inner = new(EC_InternalUseOnlyConstructor, NewProp_filterMe, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("filter_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Randomly filters an array of actors using the specified filter's random filter"));
			MetaData->SetValue(NewProp_filterName, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_filterMe, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Afilter_base_FilterActorByFilterName()
	{
		struct filter_base_eventFilterActorByFilterName_Parms
		{
			const AActor* filterMe;
			FName filterName;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Afilter_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilterActorByFilterName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(filter_base_eventFilterActorByFilterName_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, filter_base_eventFilterActorByFilterName_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, filter_base_eventFilterActorByFilterName_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, filter_base_eventFilterActorByFilterName_Parms), sizeof(bool), true);
			UProperty* NewProp_filterName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(filterName, filter_base_eventFilterActorByFilterName_Parms), 0x0010000000000082);
			UProperty* NewProp_filterMe = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(filterMe, filter_base_eventFilterActorByFilterName_Parms), 0x0010000000000082, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("filter_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given an actor and the name of a filter, returns true if the actor passes the filter, false otherwise"));
			MetaData->SetValue(NewProp_filterName, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_filterMe, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Afilter_base_FilterActorRandomly()
	{
		struct filter_base_eventFilterActorRandomly_Parms
		{
			const AActor* filterMe;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Afilter_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilterActorRandomly"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(filter_base_eventFilterActorRandomly_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, filter_base_eventFilterActorRandomly_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, filter_base_eventFilterActorRandomly_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, filter_base_eventFilterActorRandomly_Parms), sizeof(bool), true);
			UProperty* NewProp_filterMe = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(filterMe, filter_base_eventFilterActorRandomly_Parms), 0x0010000000000082, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("filter_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Checks if an actor would pass this filter randomly"));
			MetaData->SetValue(NewProp_filterMe, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Afilter_base_FilterActorRandomlyByFilterName()
	{
		struct filter_base_eventFilterActorRandomlyByFilterName_Parms
		{
			const AActor* filterMe;
			FName filterName;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Afilter_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilterActorRandomlyByFilterName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(filter_base_eventFilterActorRandomlyByFilterName_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, filter_base_eventFilterActorRandomlyByFilterName_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, filter_base_eventFilterActorRandomlyByFilterName_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, filter_base_eventFilterActorRandomlyByFilterName_Parms), sizeof(bool), true);
			UProperty* NewProp_filterName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(filterName, filter_base_eventFilterActorRandomlyByFilterName_Parms), 0x0010000000000082);
			UProperty* NewProp_filterMe = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("filterMe"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(filterMe, filter_base_eventFilterActorRandomlyByFilterName_Parms), 0x0010000000000082, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("filter_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Given an actor and the name of a filter, returns true if the actor passes the filter, false otherwise"));
			MetaData->SetValue(NewProp_filterName, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_filterMe, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Afilter_base_FindFilterByName()
	{
		struct filter_base_eventFindFilterByName_Parms
		{
			FName targetName;
			const UObject* WorldContextObject;
			Afilter_base* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Afilter_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FindFilterByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(filter_base_eventFindFilterByName_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, filter_base_eventFindFilterByName_Parms), 0x0010000000000580, Z_Construct_UClass_Afilter_base_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, filter_base_eventFindFilterByName_Parms), 0x0010000000000082, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_targetName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("targetName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(targetName, filter_base_eventFindFilterByName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("filter_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Declare macro'ed finder function"));
			MetaData->SetValue(NewProp_WorldContextObject, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Afilter_base_OnFail()
	{
		UObject* Outer=Z_Construct_UClass_Afilter_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnFail"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x48020800, 65535, sizeof(filter_base_eventOnFail_Parms));
			UProperty* NewProp_failedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("failedActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(failedActor, filter_base_eventOnFail_Parms), 0x0010000000000082, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("filter_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(NewProp_failedActor, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Afilter_base_OnPass()
	{
		UObject* Outer=Z_Construct_UClass_Afilter_base();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPass"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x48020800, 65535, sizeof(filter_base_eventOnPass_Parms));
			UProperty* NewProp_passedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("passedActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(passedActor, filter_base_eventOnPass_Parms), 0x0010000000000082, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("filter_base"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("IMPLEMENTABLE BP EVENTS\n//Called whenever an actor or actor-array-element passes this filter"));
			MetaData->SetValue(NewProp_passedActor, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Afilter_base_NoRegister()
	{
		return Afilter_base::StaticClass();
	}
	UClass* Z_Construct_UClass_Afilter_base()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Afilter_base::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Afilter_base_FilterActor());
				OuterClass->LinkChild(Z_Construct_UFunction_Afilter_base_FilterActorArray());
				OuterClass->LinkChild(Z_Construct_UFunction_Afilter_base_FilterActorArrayByFilterName());
				OuterClass->LinkChild(Z_Construct_UFunction_Afilter_base_FilterActorArrayRandomly());
				OuterClass->LinkChild(Z_Construct_UFunction_Afilter_base_FilterActorArrayRandomlyByFilterName());
				OuterClass->LinkChild(Z_Construct_UFunction_Afilter_base_FilterActorByFilterName());
				OuterClass->LinkChild(Z_Construct_UFunction_Afilter_base_FilterActorRandomly());
				OuterClass->LinkChild(Z_Construct_UFunction_Afilter_base_FilterActorRandomlyByFilterName());
				OuterClass->LinkChild(Z_Construct_UFunction_Afilter_base_FindFilterByName());
				OuterClass->LinkChild(Z_Construct_UFunction_Afilter_base_OnFail());
				OuterClass->LinkChild(Z_Construct_UFunction_Afilter_base_OnPass());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bGeneratePassFailEvents, Afilter_base, bool);
				UProperty* NewProp_bGeneratePassFailEvents = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bGeneratePassFailEvents"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bGeneratePassFailEvents, Afilter_base), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bGeneratePassFailEvents, Afilter_base), sizeof(bool), true);
				UProperty* NewProp_randomFilterBias = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("randomFilterBias"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(randomFilterBias, Afilter_base), 0x0010000000000005);
				UProperty* NewProp_subFilterName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("subFilterName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(subFilterName, Afilter_base), 0x0010000000000005);
				UProperty* NewProp_filterByTextParameter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("filterByTextParameter"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(filterByTextParameter, Afilter_base), 0x0010000000000005);
				UProperty* NewProp_filterByClassParemeter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("filterByClassParemeter"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(filterByClassParemeter, Afilter_base), 0x0010000000000005, Z_Construct_UClass_UObject_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_filterType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("filterType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(filterType, Afilter_base), 0x0010000000000005, Z_Construct_UEnum_MMC_Bowling_FilterType());
				UProperty* NewProp_mode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("mode"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(mode, Afilter_base), 0x0010000000000005, Z_Construct_UEnum_MMC_Bowling_FilterMode());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Afilter_base_FilterActor(), "FilterActor"); // 2261099769
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Afilter_base_FilterActorArray(), "FilterActorArray"); // 2024743751
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Afilter_base_FilterActorArrayByFilterName(), "FilterActorArrayByFilterName"); // 4175001070
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Afilter_base_FilterActorArrayRandomly(), "FilterActorArrayRandomly"); // 1678546924
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Afilter_base_FilterActorArrayRandomlyByFilterName(), "FilterActorArrayRandomlyByFilterName"); // 699063157
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Afilter_base_FilterActorByFilterName(), "FilterActorByFilterName"); // 1947983318
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Afilter_base_FilterActorRandomly(), "FilterActorRandomly"); // 1890460639
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Afilter_base_FilterActorRandomlyByFilterName(), "FilterActorRandomlyByFilterName"); // 1864902335
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Afilter_base_FindFilterByName(), "FindFilterByName"); // 163440486
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Afilter_base_OnFail(), "OnFail"); // 237595757
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Afilter_base_OnPass(), "OnPass"); // 1292756085
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("filter_base.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
				MetaData->SetValue(NewProp_bGeneratePassFailEvents, TEXT("Category"), TEXT("filter_base"));
				MetaData->SetValue(NewProp_bGeneratePassFailEvents, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
				MetaData->SetValue(NewProp_bGeneratePassFailEvents, TEXT("ToolTip"), TEXT("Whether or not to generate pass/fail events"));
				MetaData->SetValue(NewProp_randomFilterBias, TEXT("Category"), TEXT("filter_base"));
				MetaData->SetValue(NewProp_randomFilterBias, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
				MetaData->SetValue(NewProp_randomFilterBias, TEXT("ToolTip"), TEXT("Proportion of tests that pass. 0 is none, 1 is all"));
				MetaData->SetValue(NewProp_randomFilterBias, TEXT("UIMax"), TEXT("1.0"));
				MetaData->SetValue(NewProp_randomFilterBias, TEXT("UIMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_subFilterName, TEXT("Category"), TEXT("filter_base"));
				MetaData->SetValue(NewProp_subFilterName, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
				MetaData->SetValue(NewProp_subFilterName, TEXT("ToolTip"), TEXT("If specified, actors will also have to pass this other filter in order to pass this filter"));
				MetaData->SetValue(NewProp_filterByTextParameter, TEXT("Category"), TEXT("filter_base"));
				MetaData->SetValue(NewProp_filterByTextParameter, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
				MetaData->SetValue(NewProp_filterByTextParameter, TEXT("ToolTip"), TEXT("If filterType is ByName or ByTag, this is used to to test actors"));
				MetaData->SetValue(NewProp_filterByClassParemeter, TEXT("Category"), TEXT("filter_base"));
				MetaData->SetValue(NewProp_filterByClassParemeter, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
				MetaData->SetValue(NewProp_filterByClassParemeter, TEXT("ToolTip"), TEXT("If filterType == ByClass, tested actors must be of this class to pass"));
				MetaData->SetValue(NewProp_filterType, TEXT("Category"), TEXT("filter_base"));
				MetaData->SetValue(NewProp_filterType, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
				MetaData->SetValue(NewProp_filterType, TEXT("ToolTip"), TEXT("How to filter through actors"));
				MetaData->SetValue(NewProp_mode, TEXT("Category"), TEXT("filter_base"));
				MetaData->SetValue(NewProp_mode, TEXT("ModuleRelativePath"), TEXT("filter_base.h"));
				MetaData->SetValue(NewProp_mode, TEXT("ToolTip"), TEXT("MEMBER VARIABLES\n//How to treat actors who meet conditions. Normal is pass, inverted is fail, random is random. Random will override filterType"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Afilter_base(Z_Construct_UClass_Afilter_base, &Afilter_base::StaticClass, TEXT("Afilter_base"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Afilter_base);
	UFunction* Z_Construct_UFunction_Ainfo_hudhint_displayHintByName()
	{
		struct info_hudhint_eventdisplayHintByName_Parms
		{
			FName hintName;
			UObject* WorldContextObject;
		};
		UObject* Outer=Z_Construct_UClass_Ainfo_hudhint();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("displayHintByName"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(info_hudhint_eventdisplayHintByName_Parms));
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, info_hudhint_eventdisplayHintByName_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_hintName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hintName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(hintName, info_hudhint_eventdisplayHintByName_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("info_hudhint"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("info_hudhint.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Static function for printing any info_hudhint onto the screen, given its name"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Ainfo_hudhint_displayMessage()
	{
		UObject* Outer=Z_Construct_UClass_Ainfo_hudhint();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("displayMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x44020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("info_hudhint"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("info_hudhint.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Prints the message onto the screen"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Ainfo_hudhint_setColor()
	{
		struct info_hudhint_eventsetColor_Parms
		{
			FColor newColor;
		};
		UObject* Outer=Z_Construct_UClass_Ainfo_hudhint();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("setColor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(info_hudhint_eventsetColor_Parms));
			UProperty* NewProp_newColor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newColor"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(newColor, info_hudhint_eventsetColor_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FColor());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("info_hudhint"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("info_hudhint.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Ainfo_hudhint_NoRegister()
	{
		return Ainfo_hudhint::StaticClass();
	}
	UClass* Z_Construct_UClass_Ainfo_hudhint()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Ainfo_hudhint::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Ainfo_hudhint_displayHintByName());
				OuterClass->LinkChild(Z_Construct_UFunction_Ainfo_hudhint_displayMessage());
				OuterClass->LinkChild(Z_Construct_UFunction_Ainfo_hudhint_setColor());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_displayColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("displayColor"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(displayColor, Ainfo_hudhint), 0x0010000000000015, Z_Construct_UScriptStruct_FColor());
				UProperty* NewProp_displayTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("displayTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(displayTime, Ainfo_hudhint), 0x0010000000000005);
				UProperty* NewProp_onScreenMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("onScreenMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(onScreenMessage, Ainfo_hudhint), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Ainfo_hudhint_displayHintByName(), "displayHintByName"); // 4068806020
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Ainfo_hudhint_displayMessage(), "displayMessage"); // 3506723947
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Ainfo_hudhint_setColor(), "setColor"); // 1896042484
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("info_hudhint.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("info_hudhint.h"));
				MetaData->SetValue(NewProp_displayColor, TEXT("Category"), TEXT("info_hudhint"));
				MetaData->SetValue(NewProp_displayColor, TEXT("ModuleRelativePath"), TEXT("info_hudhint.h"));
				MetaData->SetValue(NewProp_displayColor, TEXT("ToolTip"), TEXT("Color of the message"));
				MetaData->SetValue(NewProp_displayTime, TEXT("Category"), TEXT("info_hudhint"));
				MetaData->SetValue(NewProp_displayTime, TEXT("ModuleRelativePath"), TEXT("info_hudhint.h"));
				MetaData->SetValue(NewProp_displayTime, TEXT("ToolTip"), TEXT("How long to display the message for, in seconds"));
				MetaData->SetValue(NewProp_displayTime, TEXT("UIMax"), TEXT("9999.0"));
				MetaData->SetValue(NewProp_displayTime, TEXT("UIMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_onScreenMessage, TEXT("Category"), TEXT("info_hudhint"));
				MetaData->SetValue(NewProp_onScreenMessage, TEXT("ModuleRelativePath"), TEXT("info_hudhint.h"));
				MetaData->SetValue(NewProp_onScreenMessage, TEXT("ToolTip"), TEXT("What message to display on screen"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Ainfo_hudhint(Z_Construct_UClass_Ainfo_hudhint, &Ainfo_hudhint::StaticClass, TEXT("Ainfo_hudhint"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Ainfo_hudhint);
	UFunction* Z_Construct_UFunction_Ainfo_target_character_AppendNearestCharacterTarget()
	{
		struct info_target_character_eventAppendNearestCharacterTarget_Parms
		{
			FVector worldLocation;
			FString appendedString;
			const UObject* worldContextObject;
		};
		UObject* Outer=Z_Construct_UClass_Ainfo_target_character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AppendNearestCharacterTarget"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C22401, 65535, sizeof(info_target_character_eventAppendNearestCharacterTarget_Parms));
			UProperty* NewProp_worldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("worldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(worldContextObject, info_target_character_eventAppendNearestCharacterTarget_Parms), 0x0010000000000082, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_appendedString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("appendedString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(appendedString, info_target_character_eventAppendNearestCharacterTarget_Parms), 0x0010000008000180);
			UProperty* NewProp_worldLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("worldLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(worldLocation, info_target_character_eventAppendNearestCharacterTarget_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("info_target_character"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("info_target_character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Finds the nearest info_target and if it's an info_target_characters appends its info to the given string"));
			MetaData->SetValue(NewProp_worldContextObject, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Ainfo_target_character_GetInfo()
	{
		struct info_target_character_eventGetInfo_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_Ainfo_target_character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(info_target_character_eventGetInfo_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, info_target_character_eventGetInfo_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("info_target"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("info_target_character.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Ainfo_target_character_NoRegister()
	{
		return Ainfo_target_character::StaticClass();
	}
	UClass* Z_Construct_UClass_Ainfo_target_character()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_Ainfo_target();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Ainfo_target_character::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Ainfo_target_character_AppendNearestCharacterTarget());
				OuterClass->LinkChild(Z_Construct_UFunction_Ainfo_target_character_GetInfo());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_info = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("info"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(info, Ainfo_target_character), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Ainfo_target_character_AppendNearestCharacterTarget(), "AppendNearestCharacterTarget"); // 2608424779
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Ainfo_target_character_GetInfo(), "GetInfo"); // 32272777
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("info_target_character.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("info_target_character.h"));
				MetaData->SetValue(NewProp_info, TEXT("Category"), TEXT("info_target_character"));
				MetaData->SetValue(NewProp_info, TEXT("ModuleRelativePath"), TEXT("info_target_character.h"));
				MetaData->SetValue(NewProp_info, TEXT("ToolTip"), TEXT("For attaching extra information to the point in the world"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Ainfo_target_character(Z_Construct_UClass_Ainfo_target_character, &Ainfo_target_character::StaticClass, TEXT("Ainfo_target_character"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Ainfo_target_character);
	UFunction* Z_Construct_UFunction_Aworldui_text_Append()
	{
		struct worldui_text_eventAppend_Parms
		{
			FString suffix;
			FString loadedString;
		};
		UObject* Outer=Z_Construct_UClass_Aworldui_text();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Append"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(worldui_text_eventAppend_Parms));
			UProperty* NewProp_loadedString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("loadedString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(loadedString, worldui_text_eventAppend_Parms), 0x0010000008000180);
			UProperty* NewProp_suffix = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("suffix"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(suffix, worldui_text_eventAppend_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Aworldui_text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_text.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_text_AppendFromTarget()
	{
		struct worldui_text_eventAppendFromTarget_Parms
		{
			Ainfo_target* target;
			FString loadedString;
		};
		UObject* Outer=Z_Construct_UClass_Aworldui_text();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AppendFromTarget"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(worldui_text_eventAppendFromTarget_Parms));
			UProperty* NewProp_loadedString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("loadedString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(loadedString, worldui_text_eventAppendFromTarget_Parms), 0x0010000008000180);
			UProperty* NewProp_target = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("target"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(target, worldui_text_eventAppendFromTarget_Parms), 0x0010000000000080, Z_Construct_UClass_Ainfo_target_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Aworldui_text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_text.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_text_AppendFromTargetLocation()
	{
		struct worldui_text_eventAppendFromTargetLocation_Parms
		{
			FVector targetLocation;
			FString loadedString;
		};
		UObject* Outer=Z_Construct_UClass_Aworldui_text();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AppendFromTargetLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04C20401, 65535, sizeof(worldui_text_eventAppendFromTargetLocation_Parms));
			UProperty* NewProp_loadedString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("loadedString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(loadedString, worldui_text_eventAppendFromTargetLocation_Parms), 0x0010000008000180);
			UProperty* NewProp_targetLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("targetLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(targetLocation, worldui_text_eventAppendFromTargetLocation_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Aworldui_text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_text.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Finds the info_target nearest to the given location and appends its info"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_text_BackSpace()
	{
		UObject* Outer=Z_Construct_UClass_Aworldui_text();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BackSpace"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Aworldui_text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_text.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_text_Clear()
	{
		UObject* Outer=Z_Construct_UClass_Aworldui_text();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Clear"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Aworldui_text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_text.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_text_Enter()
	{
		struct worldui_text_eventEnter_Parms
		{
			FString loadedString;
		};
		UObject* Outer=Z_Construct_UClass_Aworldui_text();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Enter"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420401, 65535, sizeof(worldui_text_eventEnter_Parms));
			UProperty* NewProp_loadedString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("loadedString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(loadedString, worldui_text_eventEnter_Parms), 0x0010000008000180);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Aworldui_text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_text.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_text_OnEnter()
	{
		UObject* Outer=Z_Construct_UClass_Aworldui_text();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnEnter"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Aworldui_text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_text.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called at the end of Enter();"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_Aworldui_text_OnTextChanged()
	{
		UObject* Outer=Z_Construct_UClass_Aworldui_text();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTextChanged"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Aworldui_text"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("worldui_text.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called whenever a worldui_text specific function is called. Not called on SetText(...)"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_Aworldui_text_NoRegister()
	{
		return Aworldui_text::StaticClass();
	}
	UClass* Z_Construct_UClass_Aworldui_text()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ATextRenderActor();
			Z_Construct_UPackage__Script_MMC_Bowling();
			OuterClass = Aworldui_text::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_text_Append());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_text_AppendFromTarget());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_text_AppendFromTargetLocation());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_text_BackSpace());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_text_Clear());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_text_Enter());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_text_OnEnter());
				OuterClass->LinkChild(Z_Construct_UFunction_Aworldui_text_OnTextChanged());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_text_Append(), "Append"); // 2068616030
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_text_AppendFromTarget(), "AppendFromTarget"); // 3918255875
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_text_AppendFromTargetLocation(), "AppendFromTargetLocation"); // 1066353082
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_text_BackSpace(), "BackSpace"); // 200728985
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_text_Clear(), "Clear"); // 18883415
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_text_Enter(), "Enter"); // 3544010998
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_text_OnEnter(), "OnEnter"); // 1100113730
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_Aworldui_text_OnTextChanged(), "OnTextChanged"); // 2972886334
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Attachment Actor"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("worldui_text.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("worldui_text.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Aworldui_text(Z_Construct_UClass_Aworldui_text, &Aworldui_text::StaticClass, TEXT("Aworldui_text"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(Aworldui_text);
	UPackage* Z_Construct_UPackage__Script_MMC_Bowling()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/MMC_Bowling")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x86A43EC7;
			Guid.B = 0xD7F40C7A;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
